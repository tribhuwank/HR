{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\role\\index.vue","mtime":1551345202050},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPagedRoleList } from '@/api/table';\nimport { deleteRole } from '@/api/user';\nexport default {\n    data() {\n        return {\n            roletableData: [],  \n            loading: false,\n            search: ''\n        }\n    },\n    methods: {\n        handleSizeChange(val) {\n            this.getRoles(1, val);\n\n        },\n        handleCurrentChange(val) {\n            this.getRoles(val, 5);\n        },\n        getRoles: function (page, pageSize) {\n           \n            this.loading = true;\n            var params = { page: page, pageSize: pageSize }\n            return new Promise((resolve, reject) => {\n                getPagedRoleList(params).then((res) => {\n                this.roletableData = res.result;\n                console.log(this.roletableData);\n                this.loading = false;\n                    resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n       \n        indexMethod(index) {\n            return index +1;\n        },\n        handleEdit(index, row) {\n            this.$router.push({ path: 'role-edit', name:'role-edit', params: { row: row } });\n        },\n        handleDelete(index, row) {\n            this.$confirm('This will permanently delete the Role. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n                this.loading = true;\n                //NProgress.start();\n\n                var roleParams = { Name: row.name, Id: row.id };\n                deleteRole(roleParams).then((res) => {                       \n                    this.loading = false;\n                    //NProgress.done();\n                    this.getRoles();\n                    this.$message({\n                        type: 'success',\n                        message: 'Delete completed'\n                    });\n                }).catch((error) => {\n                    this.$message({\n                        type: 'info',\n                        message: 'Delete canceled ' + error\n                    });\n                });                   \n                \n            }).catch((error) => {\n                this.$message({\n                    type: 'info',\n                    message: 'Delete canceled ' + error \n                });\n            });\n        },\n        handleAdd() {\n            this.$router.push({ path: 'role-add', name: 'role-add', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\n        },\n        handleusers() {\n            this.$router.push({ path: 'user', name: 'user', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\n        }\n    },\n    mounted() {\n        this.getRoles(1,5);\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src\\views\\admin\\role","sourcesContent":["<template>\r\n    <section style=\"margin:20px;\">\r\n        <el-button round @click=\"handleusers()\" style=\"margin:20px;float:right\">Back to Users</el-button>\r\n          <el-button round @click=\"handleAdd()\" style=\"margin:20px;float:right\">ADD ROLE</el-button>\r\n     \r\n          <template>\r\n              <el-table :data=\"roletableData.results\" v-loading=\"loading\"\r\n                        style=\"width: 100%\">\r\n                  <el-table-column type=\"index\"\r\n                                   :index=\"indexMethod\">\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"name\" sortable\r\n                                   label=\"Name\"\r\n                                   width=\"180\">\r\n                  </el-table-column>\r\n                  <el-table-column align=\"right\">\r\n\r\n                      <template slot-scope=\"scope\">\r\n\r\n                          <el-button size=\"mini\"\r\n                                     @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button>\r\n                          <el-button size=\"mini\"\r\n                                     type=\"danger\"\r\n                                     @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\r\n                      </template>\r\n                  </el-table-column>\r\n              </el-table>\r\n              <div class=\"block\" style=\"text-align: center;\">\r\n                  <span class=\"demonstration\"></span>\r\n                  <el-pagination v-on:size-change=\"handleSizeChange\"\r\n                                 v-on:current-change=\"handleCurrentChange\"\r\n                                 :current-page.sync=\"roletableData.currentPage\"\r\n                                 :page-sizes=\"[5,10, 20, 50, 100]\"\r\n                                 :page-size=\"roletableData.pageSize\"\r\n                                 layout=\"total, sizes, prev, pager, next, jumper\"\r\n                                 :total=\"roletableData.rowcount\">\r\n                  </el-pagination>\r\n              </div>\r\n          </template>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import { getPagedRoleList } from '@/api/table';\r\n    import { deleteRole } from '@/api/user';\r\n    export default {\r\n        data() {\r\n            return {\r\n                roletableData: [],  \r\n                loading: false,\r\n                search: ''\r\n            }\r\n        },\r\n        methods: {\r\n            handleSizeChange(val) {\r\n                this.getRoles(1, val);\r\n\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.getRoles(val, 5);\r\n            },\r\n            getRoles: function (page, pageSize) {\r\n               \r\n                this.loading = true;\r\n                var params = { page: page, pageSize: pageSize }\r\n                return new Promise((resolve, reject) => {\r\n                    getPagedRoleList(params).then((res) => {\r\n                    this.roletableData = res.result;\r\n                    console.log(this.roletableData);\r\n                    this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n           \r\n            indexMethod(index) {\r\n                return index +1;\r\n            },\r\n            handleEdit(index, row) {\r\n                this.$router.push({ path: 'role-edit', name:'role-edit', params: { row: row } });\r\n            },\r\n            handleDelete(index, row) {\r\n                this.$confirm('This will permanently delete the Role. Continue?', 'Warning', {\r\n                    confirmButtonText: 'OK',\r\n                    cancelButtonText: 'Cancel',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.loading = true;\r\n                    //NProgress.start();\r\n\r\n                    var roleParams = { Name: row.name, Id: row.id };\r\n                    deleteRole(roleParams).then((res) => {                       \r\n                        this.loading = false;\r\n                        //NProgress.done();\r\n                        this.getRoles();\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: 'Delete completed'\r\n                        });\r\n                    }).catch((error) => {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: 'Delete canceled ' + error\r\n                        });\r\n                    });                   \r\n                    \r\n                }).catch((error) => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: 'Delete canceled ' + error \r\n                    });\r\n                });\r\n            },\r\n            handleAdd() {\r\n                this.$router.push({ path: 'role-add', name: 'role-add', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\r\n            },\r\n            handleusers() {\r\n                this.$router.push({ path: 'user', name: 'user', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getRoles(1,5);\r\n        }\r\n    };\r\n</script>\r\n<style scoped>\r\n    \r\n</style>"]}]}
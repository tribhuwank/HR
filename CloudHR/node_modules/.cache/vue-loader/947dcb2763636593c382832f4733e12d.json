{"remainingRequest":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\src\\views\\login\\index.vue","mtime":1546537358199},{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { isvalidUsername } from \"@/utils/validate\";\r\n\r\nexport default {\r\n    name: \"login\",\r\n    data() {\r\n        const validateUsername = (rule, value, callback) => {\r\n            if (!isvalidUsername(value)) {\r\n                callback(new Error(\"请输入正确的用户名\"));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        const validatePass = (rule, value, callback) => {\r\n            if (value.length < 5) {\r\n                callback(new Error(\"密码不能小于5位\"));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            loginForm: {\r\n                username: \"admin\",\r\n                password: \"123456\"\r\n            },\r\n            loginRules: {\r\n                username: [\r\n                    {\r\n                        required: true,\r\n                        trigger: \"blur\",\r\n                        validator: validateUsername\r\n                    }\r\n                ],\r\n                password: [\r\n                    { required: true, trigger: \"blur\", validator: validatePass }\r\n                ]\r\n            },\r\n            loading: false,\r\n            pwdType: \"password\"\r\n        };\r\n    },\r\n    methods: {\r\n        showPwd() {\r\n            if (this.pwdType === \"password\") {\r\n                this.pwdType = \"\";\r\n            } else {\r\n                this.pwdType = \"password\";\r\n            }\r\n        },\r\n        handleLogin() {\r\n            this.$refs.loginForm.validate(valid => {\r\n                if (valid) {\r\n                    this.loading = true;\r\n                    this.$store\r\n                        .dispatch(\"Login\", this.loginForm)\r\n                        .then(() => {\r\n                            this.loading = false;\r\n                            this.$router.push({ path: \"/\" });\r\n                        })\r\n                        .catch(() => {\r\n                            this.loading = false;\r\n                        });\r\n                } else {\r\n                    console.log(\"error submit!!\");\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src\\views\\login","sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n        <el-form class=\"login-form\" autoComplete=\"on\" :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" label-position=\"left\">\r\n            <h3 class=\"title\">Randy</h3>\r\n            <el-form-item prop=\"username\">\r\n                <span class=\"fontcontainer\">\r\n                    <span class=\"iconfont icon-yonghu\"></span>\r\n                </span>\r\n                <!-- <span class=\"svg-container svg-container_login\">\r\n                    <svg-icon icon-class=\"user\" />\r\n                </span> -->\r\n                <el-input name=\"username\" type=\"text\" v-model=\"loginForm.username\" autoComplete=\"on\" placeholder=\"username\" />\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n                <span class=\"fontcontainer\">\r\n                    <span class=\"iconfont icon-mima\"></span>\r\n                </span>\r\n                <!-- <span class=\"svg-container\">\r\n                <svg-icon icon-class=\"password\"></svg-icon>\r\n                </span> -->\r\n                <el-input name=\"password\" :type=\"pwdType\" @keyup.enter.native=\"handleLogin\" v-model=\"loginForm.password\" autoComplete=\"on\"\r\n                placeholder=\"password\"></el-input>\r\n                <!-- <span class=\"show-pwd\" @click=\"showPwd\"><svg-icon icon-class=\"eye\" /></span> -->\r\n                <span class=\"show-pwd iconfont icon-yanjing\" @click=\"showPwd\"></span>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" style=\"width:100%;\" :loading=\"loading\" @click.native.prevent=\"handleLogin\">\r\n                Sign in\r\n                </el-button>\r\n            </el-form-item>\r\n            <!-- <div class=\"tips\">\r\n                <span style=\"margin-right:20px;\">username: admin</span>\r\n                <span> password: admin</span>\r\n            </div> -->\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { isvalidUsername } from \"@/utils/validate\";\r\n\r\nexport default {\r\n    name: \"login\",\r\n    data() {\r\n        const validateUsername = (rule, value, callback) => {\r\n            if (!isvalidUsername(value)) {\r\n                callback(new Error(\"请输入正确的用户名\"));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        const validatePass = (rule, value, callback) => {\r\n            if (value.length < 5) {\r\n                callback(new Error(\"密码不能小于5位\"));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            loginForm: {\r\n                username: \"admin\",\r\n                password: \"123456\"\r\n            },\r\n            loginRules: {\r\n                username: [\r\n                    {\r\n                        required: true,\r\n                        trigger: \"blur\",\r\n                        validator: validateUsername\r\n                    }\r\n                ],\r\n                password: [\r\n                    { required: true, trigger: \"blur\", validator: validatePass }\r\n                ]\r\n            },\r\n            loading: false,\r\n            pwdType: \"password\"\r\n        };\r\n    },\r\n    methods: {\r\n        showPwd() {\r\n            if (this.pwdType === \"password\") {\r\n                this.pwdType = \"\";\r\n            } else {\r\n                this.pwdType = \"password\";\r\n            }\r\n        },\r\n        handleLogin() {\r\n            this.$refs.loginForm.validate(valid => {\r\n                if (valid) {\r\n                    this.loading = true;\r\n                    this.$store\r\n                        .dispatch(\"Login\", this.loginForm)\r\n                        .then(() => {\r\n                            this.loading = false;\r\n                            this.$router.push({ path: \"/\" });\r\n                        })\r\n                        .catch(() => {\r\n                            this.loading = false;\r\n                        });\r\n                } else {\r\n                    console.log(\"error submit!!\");\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n$bg: #2d3a4b;\r\n$light_gray: #eee;\r\n\r\n/* reset element-ui css */\r\n.login-container {\r\n    .el-input {\r\n        display: inline-block;\r\n        height: 47px;\r\n        width: 90%;\r\n        input {\r\n            background: transparent;\r\n            border: 0px;\r\n            -webkit-appearance: none;\r\n            border-radius: 0px;\r\n            padding: 12px 5px 12px 15px;\r\n            color: $light_gray;\r\n            height: 47px;\r\n            &:-webkit-autofill {\r\n                -webkit-box-shadow: 0 0 0px 1000px $bg inset !important;\r\n                -webkit-text-fill-color: #fff !important;\r\n            }\r\n        }\r\n    }\r\n    .el-form-item {\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        background: rgba(0, 0, 0, 0.1);\r\n        border-radius: 5px;\r\n        color: #454545;\r\n    }\r\n}\r\n</style>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n$bg: #2d3a4b;\r\n$dark_gray: #889aa4;\r\n$light_gray: #eee;\r\n.login-container {\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: $bg;\r\n    .login-form {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        width: 520px;\r\n        padding: 35px 35px 15px 35px;\r\n        margin: 120px auto;\r\n    }\r\n    .tips {\r\n        font-size: 14px;\r\n        color: #fff;\r\n        margin-bottom: 10px;\r\n        span {\r\n            &:first-of-type {\r\n                margin-right: 16px;\r\n            }\r\n        }\r\n    }\r\n    .svg-container {\r\n        padding: 6px 5px 6px 15px;\r\n        color: $dark_gray;\r\n        vertical-align: middle;\r\n        width: 30px;\r\n        display: inline-block;\r\n        &_login {\r\n            font-size: 20px;\r\n        }\r\n    }\r\n    .title {\r\n        font-size: 26px;\r\n        font-weight: 400;\r\n        color: $light_gray;\r\n        margin: 0px auto 40px auto;\r\n        text-align: center;\r\n        font-weight: bold;\r\n    }\r\n    .show-pwd {\r\n        position: absolute;\r\n        right: 10px;\r\n        top: 7px;\r\n        font-size: 16px;\r\n        color: $dark_gray;\r\n        cursor: pointer;\r\n        user-select: none;\r\n    }\r\n    .fontcontainer{\r\n        color:#889aa4;\r\n        padding-left:10px;\r\n    }\r\n}\r\n</style>\r\n"]}]}
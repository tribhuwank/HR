{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\employee\\EditEmployee.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\employee\\EditEmployee.vue","mtime":1558714346583},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Dependents from '@/views/employee/DependentDetail.vue'\n import { getCastList, getGenderList, getMaritalStatusList,getReligionsList,getLitracyList,getEmployeeDependentsList, getDocumentRecordList,\ngetHealthStatusList, getCountryList, getProvinceList, getDistrictList, getMunVdcList, getWardList, getDepartmentList } from '@/api/table';\nimport { addEmployee, deleteEmployee } from '@/api/employee';\nimport { getUserByPerson } from '@/api/user';\nexport default {\n    components: {\n        'form-dependents':Dependents\n    },\n    data() {\n\n        return {\n            activeName: 'first',\n            tabPosition: 'right',\n            role:'',\n           index:'',\n            ruleForm: {\n               imageUrl:'',\n                employee: {\n                    id: null,\n                    employeeJobId: '',\n                    employeeJob:{\n                       id:'',\n                        departmentId:'',\n                        postId:'',\n                        hiringDate:'',\n                        symbolNumber:'',\n                        probationPeriodFrom:'',\n                        probationPeriodTo:'',\n                        probationPermorfanceSummary:'',\n                        opinionSuggestion:''\n\n                    },\n                    personId: '',\n                    person: {\n                        id: null,\n                        firstName: '',\n                        middleName: '',\n                        lastName: '',\n                        dob: null,\n                        genderId: null,\n                        religionId: null,\n                        castId: null,\n                        email: '',\n                        phone1: '',\n                        phone2: '',\n                        permanentAddressId: '',\n                        permanentAddress: {\n                            id: null,\n                            addressTypeId: 1,\n                            countryId: null,\n                            provinceId: null,\n                            districtId: null,\n                            munVdcId: null,\n                            addressLine1: '',\n                            addressLine2: '',\n                            wardNo: null,\n                            pinCode: null,\n                            houseNo: null\n                        },\n                        temporaryAddressId: '',\n                        temporaryAddress: {\n                            id: null,\n                            addressTypeId: 2,\n                            countryId: null,\n                            provinceId: null,\n                            districtId: null,\n                            munVdcId: null,\n                            addressLine1: '',\n                            addressLine2: '',\n                            wardNo: null,\n                            pinCode: null,\n                            houseNo: null\n                        },\n                        maritalStatusId: null,\n                        healthStatusId: null,\n                        photoUrl: '',\n                        identityTypeId: null,\n                        identityNumber: null,\n                        identityIssueDate: null,\n                        identityIssuePlace: null,\n                        litracyId: null,\n                        educationId: null,\n                        eduInstitutionTypeId: null\n\n                    },\n                    managerId: null,\n                    officeContact: '',\n                    nomineeId: null,\n                    panNumber: '',\n                    citNumber: '',\n                    dependentPersons:[],\n                    documents:[]\n\n                },\n                salary:{\n\n                }\n\n            },\n           \n            genders: [],\n\n\n            religions: [],\n            casts: [],\n            addressTypes: [],\n            countrys1:[],\n            countrys2: [],\n            provinces1: [],\n            provinces2: [],\n            districts1: [],\n            districts2: [],\n            munVdcs1: [],\n            munVdcs2: [],\n            wards1: [],\n            wards2: [],\n            maritalStatuses: [],\n            healthStatuses: [],\n            identityTypes: [],\n            litracys: [],\n            educations: [],\n            eduInstitutionTypes: [],\n            departments: [],\n            persons: [],\n            managers: [],\n            posts:[],\n            departments:[]\n        };\n    },\n    created() {\n        this.getUserByPerson(this.$route.params.row);\n        this.getEmployeeDependents(this.$route.params.row);\n        this.getEmployeeDocuments(this.$route.params.row);\n        this.ruleForm.employee = this.$route.params.row;\n        this.ruleForm.imageUrl=this.ruleForm.employee.person.photo;\n        let user = JSON.parse(sessionStorage.getItem('user'));\n        if(user!==null){\n            this.role=user.roleId;\n        }\n\n    },\n    mounted() {\n        this.getGenders();\n        this.getMaritalStatus();\n        this.getReligions();\n        this.getCasts();\n        this.getLitracys();\n        this.getHealthStatuses();\n        this.getCountrys1();\n        this.getCountrys2();\n        this.getProvinces1();\n        this.getProvinces2();\n\n    },\n    methods: {\n        getUserByPerson: function (row) {\n                    this.loading = true;\n                    var params = { personId: row.personId }\n                    return new Promise((resolve, reject) => {\n                        getUserByPerson(params).then((res) => {\n                            this.loading = false;\n                            resolve()\n                           this.$set(this.$route.params.row, 'user', res.result) ;\n                        }).catch(error => {\n                            reject(error)\n                        })\n                    })\n                },\n       getEmployeeDependents: function (row) {\n            this.loading = true;\n            var params = { employeeId: row.id }\n            return new Promise((resolve, reject) => {\n                getEmployeeDependentsList(params).then((res) => {\n                    this.loading = false;\n                    resolve()\n                     this.$set(this.$route.params.row, 'dependentPersons', res.result) ;\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n        getEmployeeDocuments: function (row) {\n            this.loading = true;\n            var params = { recordId: row.id }\n            return new Promise((resolve, reject) => {\n                getDocumentRecordList(params).then((res) => {\n                    this.loading = false;\n                    resolve()\n                this.$set(this.$route.params.row, 'documents', res.result)\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n        handlePostChange(val){\n\n        },\n         indexMethod(index) {\n            return index +1;\n        },\n        handleSaveDependent() {\n            if(this.formAdd){\n                this.ruleForrm.dependentPersons.add(this.person)\n            }\n        },\n        handleAvatarSuccess(res, file) {\n            var self = this;\n            this.ruleForm.imageUrl = URL.createObjectURL(file.raw);\n            var reader = new FileReader();\n            reader.readAsDataURL(file.raw);\n            reader.onloadend = function () {\n                var rss = reader.result;\n                self.ruleForm.employee.person.photo = rss;\n            }\n\n\n\n        },\n        beforeAvatarUpload(file) {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n                this.$message.error('Avatar picture must be JPG format!');\n            }\n            if (!isLt2M) {\n                this.$message.error('Avatar picture size can not exceed 2MB!');\n            }\n            return isJPG && isLt2M;\n        },\n\n        getCountrys1: function () {\n          return new Promise((resolve, reject) => {\n           this.loading = true;\n                getCountryList().then((res) => {\n                this.countrys1 = res.result;\n                this.loading = false;\n                    resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n\n        getDepartments: function () {\n                    this.loading = true;\n                 return new Promise((resolve, reject) => {\n                    getDepartmentList().then((res) => {\n                        this.departments = res.result;\n                        this.loading = false;\n                        resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n              })\n           },\n           getCountrys2: function () {\n                    this.loading = true;\n                return new Promise((resolve, reject) => {\n                    getCountryList().then((res) => {\n                        this.countrys2 = res.result;\n                        this.loading = false;\n                         resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n              })\n             },\n            getProvinces1: function () {\n                            this.loading = true;\n                  return new Promise((resolve, reject) => {\n                            getProvinceList().then((res) => {\n                                this.provinces1 = res.result;\n                                this.loading = false;\n                             resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n                },\n                getProvinces2: function () {\n                            this.loading = true;\n                         return new Promise((resolve, reject) => {\n                            getProvinceList().then((res) => {\n                                this.provinces2 = res.result;\n                                this.loading = false;\n                               resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n                  },\n                    getDistricts1: function (provinceId) {\n                                this.loading = true;\n                          return new Promise((resolve, reject) => {\n                                var params = { provinceId: provinceId }\n                                getDistrictList(params).then((res) => {\n                                    this.districts1 = res.result;\n                                    this.loading = false;\n                                    resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n               },\n              getDistricts2: function (provinceId) {\n                                this.loading = true;\n                         return new Promise((resolve, reject) => {\n                                var params = { provinceId: provinceId }\n                                getDistrictList(params).then((res) => {\n                                    this.districts2 = res.result;\n                                    this.loading = false;\n                                   resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n              },\n\n\n        getMunVdcs1: function (districtId) {\n                            this.loading = true;\n                    return new Promise((resolve, reject) => {\n                        var params = { districtId: districtId }\n                            getMunVdcList(params).then((res) => {\n                                this.munVdcs1 = res.result;\n                                this.loading = false;\n                                resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n        },\n        getMunVdcs2: function (districtId) {\n                            this.loading = true;\n                 return new Promise((resolve, reject) => {\n                         var params = { districtId: districtId }\n                            getMunVdcList(params).then((res) => {\n                                this.munVdcs2 = res.result;\n                                this.loading = false;\n                                resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n                     },\n        getWards1: function (munVdcId) {\n                            this.loading = true;\n                           return new Promise((resolve, reject) => {\n                            var params = { munVdcId: munVdcId }\n                            getWardList(params).then((res) => {\n                                this.wards1 = res.result;\n                                this.loading = false;\n                               resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n                  },\n        getWards2: function (munVdcId) {\n                                    this.loading = true;\n                                    return new Promise((resolve, reject) => {\n                                    var params = { munVdcId: munVdcId }\n                                    getWardList(params).then((res) => {\n                                        this.wards2 = res.result;\n                                        this.loading = false;\n                                       resolve()\n                        }).catch(error => {\n                            reject(error)\n                        })\n                     })\n                  },\n        getLitracys: function () {\n                    this.loading = true;\n            return new Promise((resolve, reject) => {\n                    getLitracyList().then((res) => {\n                        this.litracys = res.result;\n                        this.loading = false;\n                        resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n              })\n        },\n       getHealthStatuses: function () {\n                    this.loading = true;\n           return new Promise((resolve, reject) => {\n                    getHealthStatusList().then((res) => {\n                        this.healthStatuses = res.result;\n                        this.loading = false;\n                        resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n             })\n         },\n        getGenders: function () {\n            this.loading = true;\n             return new Promise((resolve, reject) => {\n            getGenderList().then((res) => {\n                this.genders = res.result;\n                this.loading = false;\n                    resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n        getCasts: function () {\n                    this.loading = true;\n               return new Promise((resolve, reject) => {\n                    getCastList().then((res) => {\n                        this.casts = res.result;\n                        this.loading = false;\n                          resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n             })\n      },\n      getMaritalStatus: function () {\n            this.loading = true;\n        return new Promise((resolve, reject) => {\n            getMaritalStatusList().then((res) => {\n                this.maritalStatuses = res.result;\n                this.loading = false;\n                 resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n        getReligions: function () {\n                    this.loading = true;\n                 return new Promise((resolve, reject) => {\n                    getReligionsList().then((res) => {\n                        this.religions = res.result;\n                        this.loading = false;\n                        resolve()\n                }).catch(error => {\n                    reject(error)\n                })\n              })\n        },\n        handleClick(tab, event) {\n            console.log(tab, event);\n        },\n\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.loading = true;\n                    return new Promise((resolve, reject) => {\n                    var employeeParams = { Id: this.ruleForm.id, Name: this.ruleForm.name, UserName: this.ruleForm.username, Password: this.ruleForm.password, RoleId: this.ruleForm.roleId };\n                    editEmployee(employeeParams).then((res) => {\n                        this.$router.back();\n                        this.loading = false;\n                         resolve()\n                        this.$message({\n                            type: 'success',\n                            message: 'Employee Edit completed'\n                        })\n                    }).catch(error => {\n                       reject(error)\n                     })\n                    })\n                } else {\n                    this.$message({\n                        type: 'info',\n                        message: 'Employee Edit Canceled'\n                    });\n                    return false;\n                }\n            })\n        },\n        resetForm(formName) {\n            this.$router.back();\n            //this.$refs[formName].resetFields();\n        },\n        handleBack() {\n            this.$router.back();\n        }\n    }\n\n}\n",{"version":3,"sources":["EditEmployee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"EditEmployee.vue","sourceRoot":"src\\views\\employee","sourcesContent":["<template>\r\n    <section style=\"margin:20px;\">\r\n        <el-row>\r\n            <el-button round @click=\"handleBack()\" style=\"margin:20px;float:right\">BACK TO EMPLOYEES</el-button>\r\n        </el-row>\r\n        <el-form :model=\"ruleForm\" ref=\"ruleForm\" label-width=\"120px\">\r\n            <el-tabs :tab-position=\"tabPosition\">\r\n                <el-tab-pane>\r\n                    <span slot=\"label\"><i class=\"el-icon-date\"></i> Personal Details</span>\r\n                    <el-row>\r\n                        <el-col :span=\"8\">\r\n\r\n                            <el-form-item label=\"First Name\" prop=\"employee.person.firstName\" placeholder=\"First Name\"\r\n                                          :rules=\"{ required: true, message: 'Please input First Name', trigger: 'blur' }\">\r\n                                <el-input v-model=\"ruleForm.employee.person.firstName\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Middle Name\" prop=\"employee.person.middleName\" placeholder=\"Middle Name\">\r\n                                <el-input v-model=\"ruleForm.employee.person.middleName\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Last Name\" prop=\"employee.person.lastName\" placeholder=\"Last Name\"\r\n                                          :rules=\"{ required: true, message: 'Please input Last Name', trigger: 'blur' }\">\r\n                                <el-input v-model=\"ruleForm.employee.person.lastName\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Date of birth\" prop=\"employee.person.dob\" placeholder=\"Date of birth\"\r\n                                          :rules=\"{ type: 'date', required: true, message: 'Please Pick a date', trigger: 'change' }\">\r\n                                <el-date-picker v-model=\"ruleForm.employee.person.dob\"\r\n                                                type=\"date\"\r\n                                                placeholder=\"Pick a date\"\r\n                                                default-value=\"2001-01-01\">\r\n                                </el-date-picker>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"Marital Status\" prop=\"employee.person.maritalStatusId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Marital Status', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.maritalStatusId\" placeholder=\"Select Marital Status\">\r\n                                    <el-option v-for=\"item in maritalStatuses\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Religion\" prop=\"employee.person.religionId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Religion', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.religionId\" placeholder=\"Select Religion\">\r\n                                    <el-option v-for=\"item in religions\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n\r\n\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Gender\" prop=\"employee.person.genderId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Gender', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.genderId\" placeholder=\"Select Gender\">\r\n                                    <el-option v-for=\"item in genders\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Health Status\" prop=\"employee.person.healthStatusId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Health Status', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.healthStatusId\" placeholder=\"Select Health Status\">\r\n                                    <el-option v-for=\"item in healthStatuses\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Cast\" prop=\"employee.person.castId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Cast', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.castId\" placeholder=\"Select Cast\">\r\n                                    <el-option v-for=\"item in casts\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n\r\n\r\n\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Photograph\" prop=\"imageUrl\" placeholder=\"photo\"\r\n                                          :rules=\"{ required: true, message: 'Please Select an image', trigger: 'change' }\">\r\n                                <el-upload class=\"avatar-uploader\"\r\n                                           action=\"\"\r\n                                           :show-file-list=\"false\"\r\n                                           :on-success=\"handleAvatarSuccess\"\r\n                                           :before-upload=\"beforeAvatarUpload\">\r\n                                    <img v-if=\"ruleForm.imageUrl\" :src=\"ruleForm.imageUrl\" class=\"avatar\">\r\n                                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                                </el-upload>\r\n                            </el-form-item>\r\n\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"Config\">\r\n                    <span slot=\"label\"><i class=\"el-icon-date\"></i> Contact Details</span>\r\n                    <el-row>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Mobile\" prop=\"employee.person.Phone1\" placeholder=\"Mobile\"\r\n                                          :rules=\"{ required: true, message: 'Please input Mobile Number', trigger: 'blur' }\">\r\n                                <el-input v-model=\"ruleForm.employee.person.Phone1\"></el-input>\r\n                            </el-form-item>\r\n\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Phone\" prop=\"employee.person.Phone2\" placeholder=\"Phone\">\r\n                                <el-input v-model=\"ruleForm.employee.person.Phone2\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Email\" prop=\"employee.person.email\" placeholder=\"Enter Email\"\r\n                                          :rules=\"{required: true, pattern:/\\D*([2-9]\\d{2})(\\D*)([2-9]\\d{2})(\\D*)(\\d{4})\\D*/, message: 'Please input Email', trigger: 'blur' }\">\r\n                                <el-input v-model=\"ruleForm.employee.person.email\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                    </el-row>\r\n                    <el-row style=\"display: block; border: 1px solid #ebebeb; border-radius: 3px;transition: .2s;\">\r\n                        <header>Address Line 1</header>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Country\" prop=\"employee.person.permanentAddress.countryId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Country', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.permanentAddress.countryId\" placeholder=\"Select Country\" @change=\"getProvinces1\" disabled>\r\n                                    <el-option v-for=\"item in countrys1\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"MunVdc\" prop=\"employee.person.permanentAddress.munVdcId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select MunVdc', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.permanentAddress.munVdcId\" placeholder=\"Select MunVdc\" @change=\"getWards1\">\r\n                                    <el-option v-for=\"item in munVdcs1\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Pin Code / Zip Code\" prop=\"employee.person.permanentAddress.pinCode\" placeholder=\"Pin Code / Zip Code\">\r\n                                <el-input v-model=\"ruleForm.employee.person.permanentAddress.pinCode\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Province\" prop=\"employee.person.permanentAddress.provinceId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Province', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.permanentAddress.provinceId\" placeholder=\"Select Province\" @change=\"getDistricts1\">\r\n                                    <el-option v-for=\"item in provinces1\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Ward\" prop=\"employee.person.permanentAddress.wardNo\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Ward', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.permanentAddress.wardNo\" placeholder=\"Select Ward\">\r\n                                    <el-option v-for=\"item in wards1\"\r\n                                               :key=\"item.value\"\r\n                                               :label=\"item.label\"\r\n                                               :value=\"item.value\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"District\" prop=\"employee.person.permanentAddress.districtId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select District', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.permanentAddress.districtId\" placeholder=\"Select District\" @change=\"getMunVdcs1\">\r\n                                    <el-option v-for=\"item in districts1\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"House Number\" prop=\"employee.person.permanentAddress.houseNo\" placeholder=\"House Number\">\r\n                                <el-input v-model=\"ruleForm.employee.person.permanentAddress.houseNo\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n\r\n                    </el-row>\r\n                    <el-row style=\"display: block; border: 1px solid #ebebeb; border-radius: 3px;transition: .2s;\">\r\n                        <header>Address Line 2</header>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Country\" prop=\"employee.person.temporaryAddress.countryId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Country', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.temporaryAddress.countryId\" placeholder=\"Select Country\" @change=\"getProvinces2\" disabled>\r\n                                    <el-option v-for=\"item in countrys2\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"MunVdc\" prop=\"employee.person.temporaryAddress.munVdcId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select MunVdc', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.temporaryAddress.munVdcId\" placeholder=\"Select MunVdc\" @change=\"getWards2\">\r\n                                    <el-option v-for=\"item in munVdcs2\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Pin Code / Zip Code\" prop=\"employee.person.temporaryAddress.pinCode\" placeholder=\"Pin Code / Zip Code\">\r\n                                <el-input v-model=\"ruleForm.employee.person.temporaryAddress.pinCode\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"Province\" prop=\"employee.person.temporaryAddress.provinceId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Province', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.temporaryAddress.provinceId\" placeholder=\"Select Province\" @change=\"getDistricts2\">\r\n                                    <el-option v-for=\"item in provinces2\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Ward\" prop=\"employee.person.temporaryAddress.wardNo\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Ward', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.temporaryAddress.wardNo\" placeholder=\"Select Ward\">\r\n                                    <el-option v-for=\"item in wards2\"\r\n                                               :key=\"item.value\"\r\n                                               :label=\"item.label\"\r\n                                               :value=\"item.value\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <el-form-item label=\"District\" prop=\"employee.person.temporaryAddress.districtId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select District', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.temporaryAddress.districtId\" placeholder=\"Select District\" @change=\"getMunVdcs2\">\r\n                                    <el-option v-for=\"item in districts2\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"House Number\" prop=\"employee.person.temporaryAddress.houseNo\" placeholder=\"House Number\">\r\n                                <el-input v-model=\"ruleForm.employee.person.temporaryAddress.houseNo\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n\r\n                    </el-row>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"Officials\" v-if=\"role===1\">\r\n                    <span slot=\"label\"><i class=\"el-icon-date\"></i> Officials</span>\r\n                    <el-row>\r\n                        <el-col :span=\"11\">\r\n                            <el-form-item label=\"Hiring Date\" prop=\"employee.employeeJob.hiringDate\" placeholder=\"Hiring Date\"\r\n                                          :rules=\"{ type: 'date', required: true, message: 'Please Pick a date', trigger: 'change' }\">\r\n                                <el-date-picker v-model=\"ruleForm.employee.employeeJob.hiringDate\"\r\n                                                type=\"date\"\r\n                                                placeholder=\"Pick a date\"\r\n                                                default-value=\"2001-01-01\">\r\n                                </el-date-picker>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Post\" prop=\"employee.employeeJob.postId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Post', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-cascader :options=\"departments\" @active-item-change=\"handlePostChange\" :props=\"posts\" v-model=\"ruleForm.employee.employeeJob.postId\"></el-cascader>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :span=\"11\">\r\n                            <el-form-item label=\"Symbol Number\" prop=\"employee.employeeJob.symbolNumber\" placeholder=\"Symbol Number\"\r\n                                          :rules=\"{ required: true, message: 'Please input Employee Number', trigger: 'blur' }\">\r\n                                <el-input v-model=\"ruleForm.employee.employeeJob.symbolNumber\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                    </el-row>\r\n                    <el-row>\r\n\r\n                    </el-row>\r\n                </el-tab-pane>\r\n\r\n                <el-tab-pane label=\"Role\">\r\n                    <span slot=\"label\"><i class=\"el-icon-date\"></i> Dependents Details</span>\r\n                    <el-row>\r\n                        <form-dependents v-bind:ruleForm.employee.dependentPersons=\"ruleForm.employee.dependentPersons\"></form-dependents>\r\n                    </el-row>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"Role\">\r\n                    <span slot=\"label\"><i class=\"el-icon-date\"></i> Education Details</span>\r\n                    <el-row>\r\n                        <el-col :span=\"11\">\r\n                            <el-form-item label=\"Litracy\" prop=\"employee.person.litracyId\"\r\n                                          :rules=\"{ required: true, message: 'Please Select Litracys', pattern: /.+/, trigger: 'change' }\">\r\n                                <el-select v-model=\"ruleForm.employee.person.litracyId\" placeholder=\"Select Litracys\">\r\n                                    <el-option v-for=\"item in litracys\"\r\n                                               :key=\"item.id\"\r\n                                               :label=\"item.name\"\r\n                                               :value=\"item.id\">\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"Role\">\r\n                    <span slot=\"label\"><i class=\"el-icon-date\"></i> Documents</span>\r\n                    Documents\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n            <el-row style=\"margin:20px;\">\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Update</el-button>\r\n                    <el-button @click=\"resetForm('ruleForm')\">Cancel</el-button>\r\n                </el-form-item>\r\n            </el-row>\r\n        </el-form>\r\n\r\n    </section>\r\n</template>\r\n<script>\r\n    import Dependents from '@/views/employee/DependentDetail.vue'\r\n     import { getCastList, getGenderList, getMaritalStatusList,getReligionsList,getLitracyList,getEmployeeDependentsList, getDocumentRecordList,\r\n    getHealthStatusList, getCountryList, getProvinceList, getDistrictList, getMunVdcList, getWardList, getDepartmentList } from '@/api/table';\r\n    import { addEmployee, deleteEmployee } from '@/api/employee';\r\n    import { getUserByPerson } from '@/api/user';\r\n    export default {\r\n        components: {\r\n            'form-dependents':Dependents\r\n        },\r\n        data() {\r\n\r\n            return {\r\n                activeName: 'first',\r\n                tabPosition: 'right',\r\n                role:'',\r\n               index:'',\r\n                ruleForm: {\r\n                   imageUrl:'',\r\n                    employee: {\r\n                        id: null,\r\n                        employeeJobId: '',\r\n                        employeeJob:{\r\n                           id:'',\r\n                            departmentId:'',\r\n                            postId:'',\r\n                            hiringDate:'',\r\n                            symbolNumber:'',\r\n                            probationPeriodFrom:'',\r\n                            probationPeriodTo:'',\r\n                            probationPermorfanceSummary:'',\r\n                            opinionSuggestion:''\r\n\r\n                        },\r\n                        personId: '',\r\n                        person: {\r\n                            id: null,\r\n                            firstName: '',\r\n                            middleName: '',\r\n                            lastName: '',\r\n                            dob: null,\r\n                            genderId: null,\r\n                            religionId: null,\r\n                            castId: null,\r\n                            email: '',\r\n                            phone1: '',\r\n                            phone2: '',\r\n                            permanentAddressId: '',\r\n                            permanentAddress: {\r\n                                id: null,\r\n                                addressTypeId: 1,\r\n                                countryId: null,\r\n                                provinceId: null,\r\n                                districtId: null,\r\n                                munVdcId: null,\r\n                                addressLine1: '',\r\n                                addressLine2: '',\r\n                                wardNo: null,\r\n                                pinCode: null,\r\n                                houseNo: null\r\n                            },\r\n                            temporaryAddressId: '',\r\n                            temporaryAddress: {\r\n                                id: null,\r\n                                addressTypeId: 2,\r\n                                countryId: null,\r\n                                provinceId: null,\r\n                                districtId: null,\r\n                                munVdcId: null,\r\n                                addressLine1: '',\r\n                                addressLine2: '',\r\n                                wardNo: null,\r\n                                pinCode: null,\r\n                                houseNo: null\r\n                            },\r\n                            maritalStatusId: null,\r\n                            healthStatusId: null,\r\n                            photoUrl: '',\r\n                            identityTypeId: null,\r\n                            identityNumber: null,\r\n                            identityIssueDate: null,\r\n                            identityIssuePlace: null,\r\n                            litracyId: null,\r\n                            educationId: null,\r\n                            eduInstitutionTypeId: null\r\n\r\n                        },\r\n                        managerId: null,\r\n                        officeContact: '',\r\n                        nomineeId: null,\r\n                        panNumber: '',\r\n                        citNumber: '',\r\n                        dependentPersons:[],\r\n                        documents:[]\r\n\r\n                    },\r\n                    salary:{\r\n\r\n                    }\r\n\r\n                },\r\n               \r\n                genders: [],\r\n\r\n\r\n                religions: [],\r\n                casts: [],\r\n                addressTypes: [],\r\n                countrys1:[],\r\n                countrys2: [],\r\n                provinces1: [],\r\n                provinces2: [],\r\n                districts1: [],\r\n                districts2: [],\r\n                munVdcs1: [],\r\n                munVdcs2: [],\r\n                wards1: [],\r\n                wards2: [],\r\n                maritalStatuses: [],\r\n                healthStatuses: [],\r\n                identityTypes: [],\r\n                litracys: [],\r\n                educations: [],\r\n                eduInstitutionTypes: [],\r\n                departments: [],\r\n                persons: [],\r\n                managers: [],\r\n                posts:[],\r\n                departments:[]\r\n            };\r\n        },\r\n        created() {\r\n            this.getUserByPerson(this.$route.params.row);\r\n            this.getEmployeeDependents(this.$route.params.row);\r\n            this.getEmployeeDocuments(this.$route.params.row);\r\n            this.ruleForm.employee = this.$route.params.row;\r\n            this.ruleForm.imageUrl=this.ruleForm.employee.person.photo;\r\n            let user = JSON.parse(sessionStorage.getItem('user'));\r\n            if(user!==null){\r\n                this.role=user.roleId;\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n            this.getGenders();\r\n            this.getMaritalStatus();\r\n            this.getReligions();\r\n            this.getCasts();\r\n            this.getLitracys();\r\n            this.getHealthStatuses();\r\n            this.getCountrys1();\r\n            this.getCountrys2();\r\n            this.getProvinces1();\r\n            this.getProvinces2();\r\n\r\n        },\r\n        methods: {\r\n            getUserByPerson: function (row) {\r\n                        this.loading = true;\r\n                        var params = { personId: row.personId }\r\n                        return new Promise((resolve, reject) => {\r\n                            getUserByPerson(params).then((res) => {\r\n                                this.loading = false;\r\n                                resolve()\r\n                               this.$set(this.$route.params.row, 'user', res.result) ;\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                        })\r\n                    },\r\n           getEmployeeDependents: function (row) {\r\n                this.loading = true;\r\n                var params = { employeeId: row.id }\r\n                return new Promise((resolve, reject) => {\r\n                    getEmployeeDependentsList(params).then((res) => {\r\n                        this.loading = false;\r\n                        resolve()\r\n                         this.$set(this.$route.params.row, 'dependentPersons', res.result) ;\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getEmployeeDocuments: function (row) {\r\n                this.loading = true;\r\n                var params = { recordId: row.id }\r\n                return new Promise((resolve, reject) => {\r\n                    getDocumentRecordList(params).then((res) => {\r\n                        this.loading = false;\r\n                        resolve()\r\n                    this.$set(this.$route.params.row, 'documents', res.result)\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            handlePostChange(val){\r\n\r\n            },\r\n             indexMethod(index) {\r\n                return index +1;\r\n            },\r\n            handleSaveDependent() {\r\n                if(this.formAdd){\r\n                    this.ruleForrm.dependentPersons.add(this.person)\r\n                }\r\n            },\r\n            handleAvatarSuccess(res, file) {\r\n                var self = this;\r\n                this.ruleForm.imageUrl = URL.createObjectURL(file.raw);\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(file.raw);\r\n                reader.onloadend = function () {\r\n                    var rss = reader.result;\r\n                    self.ruleForm.employee.person.photo = rss;\r\n                }\r\n\r\n\r\n\r\n            },\r\n            beforeAvatarUpload(file) {\r\n                const isJPG = file.type === 'image/jpeg';\r\n                const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n                if (!isJPG) {\r\n                    this.$message.error('Avatar picture must be JPG format!');\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$message.error('Avatar picture size can not exceed 2MB!');\r\n                }\r\n                return isJPG && isLt2M;\r\n            },\r\n\r\n            getCountrys1: function () {\r\n              return new Promise((resolve, reject) => {\r\n               this.loading = true;\r\n                    getCountryList().then((res) => {\r\n                    this.countrys1 = res.result;\r\n                    this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n\r\n            getDepartments: function () {\r\n                        this.loading = true;\r\n                     return new Promise((resolve, reject) => {\r\n                        getDepartmentList().then((res) => {\r\n                            this.departments = res.result;\r\n                            this.loading = false;\r\n                            resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                  })\r\n               },\r\n               getCountrys2: function () {\r\n                        this.loading = true;\r\n                    return new Promise((resolve, reject) => {\r\n                        getCountryList().then((res) => {\r\n                            this.countrys2 = res.result;\r\n                            this.loading = false;\r\n                             resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                  })\r\n                 },\r\n                getProvinces1: function () {\r\n                                this.loading = true;\r\n                      return new Promise((resolve, reject) => {\r\n                                getProvinceList().then((res) => {\r\n                                    this.provinces1 = res.result;\r\n                                    this.loading = false;\r\n                                 resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                    },\r\n                    getProvinces2: function () {\r\n                                this.loading = true;\r\n                             return new Promise((resolve, reject) => {\r\n                                getProvinceList().then((res) => {\r\n                                    this.provinces2 = res.result;\r\n                                    this.loading = false;\r\n                                   resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                      },\r\n                        getDistricts1: function (provinceId) {\r\n                                    this.loading = true;\r\n                              return new Promise((resolve, reject) => {\r\n                                    var params = { provinceId: provinceId }\r\n                                    getDistrictList(params).then((res) => {\r\n                                        this.districts1 = res.result;\r\n                                        this.loading = false;\r\n                                        resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                   },\r\n                  getDistricts2: function (provinceId) {\r\n                                    this.loading = true;\r\n                             return new Promise((resolve, reject) => {\r\n                                    var params = { provinceId: provinceId }\r\n                                    getDistrictList(params).then((res) => {\r\n                                        this.districts2 = res.result;\r\n                                        this.loading = false;\r\n                                       resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                  },\r\n\r\n\r\n            getMunVdcs1: function (districtId) {\r\n                                this.loading = true;\r\n                        return new Promise((resolve, reject) => {\r\n                            var params = { districtId: districtId }\r\n                                getMunVdcList(params).then((res) => {\r\n                                    this.munVdcs1 = res.result;\r\n                                    this.loading = false;\r\n                                    resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n            },\r\n            getMunVdcs2: function (districtId) {\r\n                                this.loading = true;\r\n                     return new Promise((resolve, reject) => {\r\n                             var params = { districtId: districtId }\r\n                                getMunVdcList(params).then((res) => {\r\n                                    this.munVdcs2 = res.result;\r\n                                    this.loading = false;\r\n                                    resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                         },\r\n            getWards1: function (munVdcId) {\r\n                                this.loading = true;\r\n                               return new Promise((resolve, reject) => {\r\n                                var params = { munVdcId: munVdcId }\r\n                                getWardList(params).then((res) => {\r\n                                    this.wards1 = res.result;\r\n                                    this.loading = false;\r\n                                   resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                      },\r\n            getWards2: function (munVdcId) {\r\n                                        this.loading = true;\r\n                                        return new Promise((resolve, reject) => {\r\n                                        var params = { munVdcId: munVdcId }\r\n                                        getWardList(params).then((res) => {\r\n                                            this.wards2 = res.result;\r\n                                            this.loading = false;\r\n                                           resolve()\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                         })\r\n                      },\r\n            getLitracys: function () {\r\n                        this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                        getLitracyList().then((res) => {\r\n                            this.litracys = res.result;\r\n                            this.loading = false;\r\n                            resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                  })\r\n            },\r\n           getHealthStatuses: function () {\r\n                        this.loading = true;\r\n               return new Promise((resolve, reject) => {\r\n                        getHealthStatusList().then((res) => {\r\n                            this.healthStatuses = res.result;\r\n                            this.loading = false;\r\n                            resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                 })\r\n             },\r\n            getGenders: function () {\r\n                this.loading = true;\r\n                 return new Promise((resolve, reject) => {\r\n                getGenderList().then((res) => {\r\n                    this.genders = res.result;\r\n                    this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getCasts: function () {\r\n                        this.loading = true;\r\n                   return new Promise((resolve, reject) => {\r\n                        getCastList().then((res) => {\r\n                            this.casts = res.result;\r\n                            this.loading = false;\r\n                              resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                 })\r\n          },\r\n          getMaritalStatus: function () {\r\n                this.loading = true;\r\n            return new Promise((resolve, reject) => {\r\n                getMaritalStatusList().then((res) => {\r\n                    this.maritalStatuses = res.result;\r\n                    this.loading = false;\r\n                     resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getReligions: function () {\r\n                        this.loading = true;\r\n                     return new Promise((resolve, reject) => {\r\n                        getReligionsList().then((res) => {\r\n                            this.religions = res.result;\r\n                            this.loading = false;\r\n                            resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                  })\r\n            },\r\n            handleClick(tab, event) {\r\n                console.log(tab, event);\r\n            },\r\n\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        this.loading = true;\r\n                        return new Promise((resolve, reject) => {\r\n                        var employeeParams = { Id: this.ruleForm.id, Name: this.ruleForm.name, UserName: this.ruleForm.username, Password: this.ruleForm.password, RoleId: this.ruleForm.roleId };\r\n                        editEmployee(employeeParams).then((res) => {\r\n                            this.$router.back();\r\n                            this.loading = false;\r\n                             resolve()\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: 'Employee Edit completed'\r\n                            })\r\n                        }).catch(error => {\r\n                           reject(error)\r\n                         })\r\n                        })\r\n                    } else {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: 'Employee Edit Canceled'\r\n                        });\r\n                        return false;\r\n                    }\r\n                })\r\n            },\r\n            resetForm(formName) {\r\n                this.$router.back();\r\n                //this.$refs[formName].resetFields();\r\n            },\r\n            handleBack() {\r\n                this.$router.back();\r\n            }\r\n        }\r\n\r\n    }\r\n</script>"]}]}
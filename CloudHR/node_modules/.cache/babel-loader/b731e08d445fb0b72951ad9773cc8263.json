{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\role\\index.vue","mtime":1551345202050},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPagedRoleList } from '@/api/table';\nimport { deleteRole } from '@/api/user';\nexport default {\n  data: function data() {\n    return {\n      roletableData: [],\n      loading: false,\n      search: ''\n    };\n  },\n  methods: {\n    handleSizeChange: function handleSizeChange(val) {\n      this.getRoles(1, val);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.getRoles(val, 5);\n    },\n    getRoles: function getRoles(page, pageSize) {\n      var _this = this;\n\n      this.loading = true;\n      var params = {\n        page: page,\n        pageSize: pageSize\n      };\n      return new _Promise(function (resolve, reject) {\n        getPagedRoleList(params).then(function (res) {\n          _this.roletableData = res.result;\n          console.log(_this.roletableData);\n          _this.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    indexMethod: function indexMethod(index) {\n      return index + 1;\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.$router.push({\n        path: 'role-edit',\n        name: 'role-edit',\n        params: {\n          row: row\n        }\n      });\n    },\n    handleDelete: function handleDelete(index, row) {\n      var _this2 = this;\n\n      this.$confirm('This will permanently delete the Role. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this2.loading = true; //NProgress.start();\n\n        var roleParams = {\n          Name: row.name,\n          Id: row.id\n        };\n        deleteRole(roleParams).then(function (res) {\n          _this2.loading = false; //NProgress.done();\n\n          _this2.getRoles();\n\n          _this2.$message({\n            type: 'success',\n            message: 'Delete completed'\n          });\n        }).catch(function (error) {\n          _this2.$message({\n            type: 'info',\n            message: 'Delete canceled ' + error\n          });\n        });\n      }).catch(function (error) {\n        _this2.$message({\n          type: 'info',\n          message: 'Delete canceled ' + error\n        });\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.$router.push({\n        path: 'role-add',\n        name: 'role-add',\n        meta: {\n          requiresAuth: true,\n          adminAuth: true,\n          operatorAuth: false\n        }\n      });\n    },\n    handleusers: function handleusers() {\n      this.$router.push({\n        path: 'user',\n        name: 'user',\n        meta: {\n          requiresAuth: true,\n          adminAuth: true,\n          operatorAuth: false\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getRoles(1, 5);\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAA,gBAAA,QAAA,aAAA;AACA,SAAA,UAAA,QAAA,YAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,GADA,EACA;AACA,WAAA,QAAA,CAAA,CAAA,EAAA,GAAA;AAEA,KAJA;AAKA,IAAA,mBALA,+BAKA,GALA,EAKA;AACA,WAAA,QAAA,CAAA,GAAA,EAAA,CAAA;AACA,KAPA;AAQA,IAAA,QAAA,EAAA,kBAAA,IAAA,EAAA,QAAA,EAAA;AAAA;;AAEA,WAAA,OAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA;AACA,aAAA,aAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,gBAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,aAAA,GAAA,GAAA,CAAA,MAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,aAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,UAAA,OAAA;AACA,SALA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA;AACA,SAPA;AAQA,OATA,CAAA;AAUA,KAtBA;AAwBA,IAAA,WAxBA,uBAwBA,KAxBA,EAwBA;AACA,aAAA,KAAA,GAAA,CAAA;AACA,KA1BA;AA2BA,IAAA,UA3BA,sBA2BA,KA3BA,EA2BA,GA3BA,EA2BA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,GAAA,EAAA;AAAA;AAAA,OAAA;AACA,KA7BA;AA8BA,IAAA,YA9BA,wBA8BA,KA9BA,EA8BA,GA9BA,EA8BA;AAAA;;AACA,WAAA,QAAA,CAAA,kDAAA,EAAA,SAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,QAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,IAAA,CADA,CAEA;;AAEA,YAAA,UAAA,GAAA;AAAA,UAAA,IAAA,EAAA,GAAA,CAAA,IAAA;AAAA,UAAA,EAAA,EAAA,GAAA,CAAA;AAAA,SAAA;AACA,QAAA,UAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,KAAA,CADA,CAEA;;AACA,UAAA,MAAA,CAAA,QAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,IAAA,EAAA,SADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA;AAIA,SARA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,IAAA,EAAA,MADA;AAEA,YAAA,OAAA,EAAA,qBAAA;AAFA,WAAA;AAIA,SAbA;AAeA,OAxBA,EAwBA,KAxBA,CAwBA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,OAAA,EAAA,qBAAA;AAFA,SAAA;AAIA,OA7BA;AA8BA,KA7DA;AA8DA,IAAA,SA9DA,uBA8DA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,YAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA,IAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA;AACA,KAhEA;AAiEA,IAAA,WAjEA,yBAiEA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,YAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA,IAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA;AACA;AAnEA,GARA;AA6EA,EAAA,OA7EA,qBA6EA;AACA,SAAA,QAAA,CAAA,CAAA,EAAA,CAAA;AACA;AA/EA,CAAA","sourcesContent":["<template>\r\n    <section style=\"margin:20px;\">\r\n        <el-button round @click=\"handleusers()\" style=\"margin:20px;float:right\">Back to Users</el-button>\r\n          <el-button round @click=\"handleAdd()\" style=\"margin:20px;float:right\">ADD ROLE</el-button>\r\n     \r\n          <template>\r\n              <el-table :data=\"roletableData.results\" v-loading=\"loading\"\r\n                        style=\"width: 100%\">\r\n                  <el-table-column type=\"index\"\r\n                                   :index=\"indexMethod\">\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"name\" sortable\r\n                                   label=\"Name\"\r\n                                   width=\"180\">\r\n                  </el-table-column>\r\n                  <el-table-column align=\"right\">\r\n\r\n                      <template slot-scope=\"scope\">\r\n\r\n                          <el-button size=\"mini\"\r\n                                     @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button>\r\n                          <el-button size=\"mini\"\r\n                                     type=\"danger\"\r\n                                     @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\r\n                      </template>\r\n                  </el-table-column>\r\n              </el-table>\r\n              <div class=\"block\" style=\"text-align: center;\">\r\n                  <span class=\"demonstration\"></span>\r\n                  <el-pagination v-on:size-change=\"handleSizeChange\"\r\n                                 v-on:current-change=\"handleCurrentChange\"\r\n                                 :current-page.sync=\"roletableData.currentPage\"\r\n                                 :page-sizes=\"[5,10, 20, 50, 100]\"\r\n                                 :page-size=\"roletableData.pageSize\"\r\n                                 layout=\"total, sizes, prev, pager, next, jumper\"\r\n                                 :total=\"roletableData.rowcount\">\r\n                  </el-pagination>\r\n              </div>\r\n          </template>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import { getPagedRoleList } from '@/api/table';\r\n    import { deleteRole } from '@/api/user';\r\n    export default {\r\n        data() {\r\n            return {\r\n                roletableData: [],  \r\n                loading: false,\r\n                search: ''\r\n            }\r\n        },\r\n        methods: {\r\n            handleSizeChange(val) {\r\n                this.getRoles(1, val);\r\n\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.getRoles(val, 5);\r\n            },\r\n            getRoles: function (page, pageSize) {\r\n               \r\n                this.loading = true;\r\n                var params = { page: page, pageSize: pageSize }\r\n                return new Promise((resolve, reject) => {\r\n                    getPagedRoleList(params).then((res) => {\r\n                    this.roletableData = res.result;\r\n                    console.log(this.roletableData);\r\n                    this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n           \r\n            indexMethod(index) {\r\n                return index +1;\r\n            },\r\n            handleEdit(index, row) {\r\n                this.$router.push({ path: 'role-edit', name:'role-edit', params: { row: row } });\r\n            },\r\n            handleDelete(index, row) {\r\n                this.$confirm('This will permanently delete the Role. Continue?', 'Warning', {\r\n                    confirmButtonText: 'OK',\r\n                    cancelButtonText: 'Cancel',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.loading = true;\r\n                    //NProgress.start();\r\n\r\n                    var roleParams = { Name: row.name, Id: row.id };\r\n                    deleteRole(roleParams).then((res) => {                       \r\n                        this.loading = false;\r\n                        //NProgress.done();\r\n                        this.getRoles();\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: 'Delete completed'\r\n                        });\r\n                    }).catch((error) => {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: 'Delete canceled ' + error\r\n                        });\r\n                    });                   \r\n                    \r\n                }).catch((error) => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: 'Delete canceled ' + error \r\n                    });\r\n                });\r\n            },\r\n            handleAdd() {\r\n                this.$router.push({ path: 'role-add', name: 'role-add', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\r\n            },\r\n            handleusers() {\r\n                this.$router.push({ path: 'user', name: 'user', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getRoles(1,5);\r\n        }\r\n    };\r\n</script>\r\n<style scoped>\r\n    \r\n</style>"],"sourceRoot":"src\\views\\admin\\role"}]}
{"remainingRequest":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\src\\utils\\request.js","dependencies":[{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\src\\utils\\request.js","mtime":1546537358184},{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\Applicatons\\\\TestProjects\\\\vue-cli3.0-vueadmin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '../store';\nimport { getToken } from '@/utils/auth'; // 创建axios实例\n// var BASE_API = '';\n// if (process.env.NODE_ENV == 'production') {\n//     BASE_API = '\"http://193.112.153.155:3001\"';\n// }else{\n//     BASE_API = '\"http://193.112.153.155:3001\"';\n// }\n\nvar service = axios.create({\n  baseURL: \"http://193.112.153.155:3001\",\n  // api的base_url\n  timeout: 5000 // 请求超时时间\n\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  //   if (store.getters.token) {\n  //     config.headers['X-Token'] = getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\n  //   };\n  if (store.getters.token) {\n    config.headers.Authorization = \"Bearer \".concat(getToken());\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.log(error); // for debug\n\n  _Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  /**\r\n  * code为非20000是抛错 可结合自己业务进行修改\r\n  */\n  var res = response.data;\n\n  if (res.code !== 1) {\n    Message({\n      message: res.message,\n      type: 'error',\n      duration: 5 * 1000\n    }); // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n\n    if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n      MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        store.dispatch('FedLogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      });\n    }\n\n    return _Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return _Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["E:\\Applicatons\\TestProjects\\vue-cli3.0-vueadmin\\src\\utils\\request.js"],"names":["axios","Message","MessageBox","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","getters","token","headers","Authorization","error","console","log","reject","response","res","data","code","message","type","duration","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,6BADgB;AACe;AACxCC,EAAAA,OAAO,EAAE,IAFgB,CAEX;;AAFW,CAAb,CAAhB,C,CAKA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvC;AACA;AACA;AACA,MAAIT,KAAK,CAACU,OAAN,CAAcC,KAAlB,EAAyB;AACrBF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,oBAAyCZ,QAAQ,EAAjD;AACH;;AACD,SAAOQ,MAAP;AACH,CARD,EAQG,UAAAK,KAAK,EAAI;AACR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFQ,CAEW;;AACnB,WAAQG,MAAR,CAAeH,KAAf;AACH,CAZD,E,CAcA;;AACAZ,OAAO,CAACI,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B,CACI,UAAAU,QAAQ,EAAI;AACR;;;AAGA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;;AACA,MAAID,GAAG,CAACE,IAAJ,KAAa,CAAjB,EAAoB;AAChBvB,IAAAA,OAAO,CAAC;AACJwB,MAAAA,OAAO,EAAEH,GAAG,CAACG,OADT;AAEJC,MAAAA,IAAI,EAAE,OAFF;AAGJC,MAAAA,QAAQ,EAAE,IAAI;AAHV,KAAD,CAAP,CADgB,CAOhB;;AACA,QAAIL,GAAG,CAACE,IAAJ,KAAa,KAAb,IAAsBF,GAAG,CAACE,IAAJ,KAAa,KAAnC,IAA4CF,GAAG,CAACE,IAAJ,KAAa,KAA7D,EAAoE;AAChEtB,MAAAA,UAAU,CAAC0B,OAAX,CAAmB,0BAAnB,EAA+C,MAA/C,EAAuD;AACnDC,QAAAA,iBAAiB,EAAE,MADgC;AAEnDC,QAAAA,gBAAgB,EAAE,IAFiC;AAGnDJ,QAAAA,IAAI,EAAE;AAH6C,OAAvD,EAIGK,IAJH,CAIQ,YAAM;AACV5B,QAAAA,KAAK,CAAC6B,QAAN,CAAe,WAAf,EAA4BD,IAA5B,CAAiC,YAAM;AACnCE,UAAAA,QAAQ,CAACC,MAAT,GADmC,CAClB;AACpB,SAFD;AAGH,OARD;AASH;;AACD,WAAO,SAAQd,MAAR,CAAe,OAAf,CAAP;AACH,GApBD,MAoBO;AACH,WAAOC,QAAQ,CAACE,IAAhB;AACH;AACJ,CA7BL,EA8BI,UAAAN,KAAK,EAAI;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADK,CACqB;;AAC1BhB,EAAAA,OAAO,CAAC;AACJwB,IAAAA,OAAO,EAAER,KAAK,CAACQ,OADX;AAEJC,IAAAA,IAAI,EAAE,OAFF;AAGJC,IAAAA,QAAQ,EAAE,IAAI;AAHV,GAAD,CAAP;AAKA,SAAO,SAAQP,MAAR,CAAeH,KAAf,CAAP;AACH,CAtCL;AAyCA,eAAeZ,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport store from '../store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建axios实例\r\n\r\n\r\n// var BASE_API = '';\r\n// if (process.env.NODE_ENV == 'production') {\r\n//     BASE_API = '\"http://193.112.153.155:3001\"';\r\n// }else{\r\n//     BASE_API = '\"http://193.112.153.155:3001\"';\r\n// }\r\nconst service = axios.create({\r\n    baseURL: \"http://193.112.153.155:3001\", // api的base_url\r\n    timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n    //   if (store.getters.token) {\r\n    //     config.headers['X-Token'] = getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n    //   };\r\n    if (store.getters.token) {\r\n        config.headers.Authorization = `Bearer ${getToken()}`;\r\n    }\r\n    return config\r\n}, error => {\r\n    // Do something with request error\r\n    console.log(error) // for debug\r\n    Promise.reject(error)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n    response => {\r\n        /**\r\n        * code为非20000是抛错 可结合自己业务进行修改\r\n        */\r\n        const res = response.data\r\n        if (res.code !== 1) {\r\n            Message({\r\n                message: res.message,\r\n                type: 'error',\r\n                duration: 5 * 1000\r\n            })\r\n\r\n            // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\r\n            if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\r\n                MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\r\n                    confirmButtonText: '重新登录',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    store.dispatch('FedLogOut').then(() => {\r\n                        location.reload()// 为了重新实例化vue-router对象 避免bug\r\n                    })\r\n                })\r\n            }\r\n            return Promise.reject('error')\r\n        } else {\r\n            return response.data\r\n        }\r\n    },\r\n    error => {\r\n        console.log('err' + error)// for debug\r\n        Message({\r\n            message: error.message,\r\n            type: 'error',\r\n            duration: 5 * 1000\r\n        })\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default service\r\n"]}]}
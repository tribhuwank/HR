{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\CloudHR\\CloudHR\\src\\store\\modules\\user.js","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\store\\modules\\user.js","mtime":1562666494967},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport { login, logout } from '@/api/login';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nimport CryptoJS from 'crypto-js';\nvar user = {\n  state: {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    roles: []\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, name) {\n      state.name = name;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    }\n  },\n  actions: {\n    Login: function Login(_ref, userInfo) {\n      var commit = _ref.commit;\n      var username = userInfo.username.trim();\n      var key = CryptoJS.enc.Hex.parse('000102030405060708090a0b0c0d0e0f');\n      var iv = CryptoJS.enc.Hex.parse('101112131415161718191a1b1c1d1e1f');\n      var encryptedPass = CryptoJS.AES.encrypt(userInfo.password, key, {\n        iv: iv\n      }).toString();\n      return new _Promise(function (resolve, reject) {\n        login(username, encryptedPass).then(function (response) {\n          console.log('response', response);\n          var data = response.data;\n          setToken(data.token);\n          commit('SET_TOKEN', data.token);\n\n          if (data.roleId && data.roleId > 0) {\n            commit('SET_ROLES', data.roleId);\n          } else {\n            reject('getInfo: roles must be a non-null array !');\n          }\n\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    LogOut: function LogOut(_ref2) {\n      var commit = _ref2.commit,\n          state = _ref2.state;\n      return new _Promise(function (resolve, reject) {\n        logout(state.token).then(function () {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          removeToken();\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut: function FedLogOut(_ref3) {\n      var commit = _ref3.commit;\n      return new _Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["E:\\Applicatons\\CloudHR\\CloudHR\\src\\store\\modules\\user.js"],"names":["login","logout","getToken","setToken","removeToken","CryptoJS","user","state","token","name","avatar","roles","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","actions","Login","userInfo","commit","username","trim","key","enc","Hex","parse","iv","encryptedPass","AES","encrypt","password","toString","resolve","reject","then","response","console","log","data","roleId","catch","error","LogOut","FedLogOut"],"mappings":"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","sourcesContent":["import { login, logout } from '@/api/login'\r\nimport { getToken, setToken, removeToken } from '@/utils/auth'\r\nimport CryptoJS from 'crypto-js'\r\n\r\nconst user = {\r\n    state: {\r\n        token: getToken(),\r\n        name: '',\r\n        avatar: '',\r\n        roles: []\r\n    },\r\n\r\n    mutations: {\r\n        SET_TOKEN: (state, token) => {\r\n            state.token = token\r\n        },\r\n        SET_NAME: (state, name) => {\r\n            state.name = name\r\n        },\r\n        SET_AVATAR: (state, avatar) => {\r\n            state.avatar = avatar\r\n        },\r\n        SET_ROLES: (state, roles) => {\r\n            state.roles = roles\r\n        }\r\n    },\r\n\r\n    actions: {       \r\n        Login({ commit }, userInfo) {\r\n            const username = userInfo.username.trim()\r\n            var key = CryptoJS.enc.Hex.parse('000102030405060708090a0b0c0d0e0f')\r\n            var iv = CryptoJS.enc.Hex.parse('101112131415161718191a1b1c1d1e1f')\r\n            var encryptedPass = CryptoJS.AES.encrypt(userInfo.password, key, { iv: iv }).toString()\r\n            return new Promise((resolve, reject) => {\r\n                login(username, encryptedPass).then(response => {\r\n                    console.log('response',response);\r\n                    const data = response.data;\r\n                    setToken(data.token)\r\n                    commit('SET_TOKEN', data.token)\r\n                    if (data.roleId && data.roleId > 0) { \r\n                        commit('SET_ROLES', data.roleId)\r\n                    } else {\r\n                        reject('getInfo: roles must be a non-null array !')\r\n                    }\r\n                    commit('SET_NAME', data.name)\r\n                    commit('SET_AVATAR', data.avatar)\r\n                    resolve()\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n\r\n       \r\n        \r\n        LogOut({ commit, state }) {\r\n            return new Promise((resolve, reject) => {\r\n                logout(state.token).then(() => {\r\n                    commit('SET_TOKEN', '')\r\n                    commit('SET_ROLES', [])\r\n                    removeToken()\r\n                    resolve()\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n\r\n        // 前端 登出\r\n        FedLogOut({ commit }) {\r\n            return new Promise(resolve => {\r\n                commit('SET_TOKEN', '')\r\n                removeToken()\r\n                resolve()\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default user\r\n"]}]}
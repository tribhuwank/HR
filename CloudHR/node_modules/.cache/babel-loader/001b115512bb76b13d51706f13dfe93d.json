{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\employee\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\employee\\Index.vue","mtime":1552141160190},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getEmployeeList } from '@/api/table';\nimport { deleteEmployee } from '@/api/employee';\nexport default {\n  data: function data() {\n    return {\n      employees: [],\n      loading: false,\n      search: '',\n      index: ''\n    };\n  },\n  methods: {\n    handleSizeChange: function handleSizeChange(val) {\n      this.getEmployees(1, val);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.getEmployees(val, 5);\n    },\n    getImageFile: function getImageFile(ImageURL) {\n      return ImageURL;\n    },\n    getEmployees: function getEmployees(page, pageSize) {\n      var _this = this;\n\n      this.loading = true; //NProgress.start();\n\n      var params = {\n        page: page,\n        pageSize: pageSize\n      };\n      return new _Promise(function (resolve, reject) {\n        getEmployeeList(params).then(function (res) {\n          _this.employees = res.result;\n          _this.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    indexMethod: function indexMethod(index) {\n      return index + 1;\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.$router.push({\n        path: 'employee-edit',\n        name: 'employee-edit',\n        params: {\n          row: row\n        },\n        meta: {\n          requiresAuth: true,\n          adminAuth: true,\n          operatorAuth: false\n        }\n      });\n    },\n    handleDelete: function handleDelete(index, row) {\n      var _this2 = this;\n\n      this.$confirm('This will permanently delete the Role. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this2.loading = true; //NProgress.start();\n\n        var employeeParams = {\n          Id: row.id,\n          PersonId: row.personId,\n          Person: row.person\n        };\n        return new _Promise(function (resolve, reject) {\n          deleteEmployee(employeeParams).then(function (res) {\n            _this2.loading = false; //NProgress.done();\n\n            _this2.getEmployees();\n\n            _this2.$message({\n              type: 'success',\n              message: 'Delete completed'\n            });\n\n            resolve();\n          }).catch(function (error) {\n            _this2.$message({\n              type: 'info',\n              message: 'Delete canceled ' + error\n            });\n\n            _this2.loading = false;\n            reject(error);\n          });\n        });\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.$router.push({\n        path: 'employee-add',\n        name: 'employee-add',\n        meta: {\n          requiresAuth: true,\n          adminAuth: true,\n          operatorAuth: false\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getEmployees();\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <section style=\"margin:20px;\">\r\n          <el-button round @click=\"handleAdd()\" style=\"margin:20px;float:right\">ADD EMPLOYEE</el-button>\r\n     \r\n          <template>\r\n              <el-table :data=\"employees.results\" v-loading=\"loading\" \r\n                        :default-sort = \"{prop: 'person.gender.name', order: 'descending'}\"\r\n                        style=\"width: 100%\">\r\n                  <el-table-column type=\"index\"\r\n                                   :index=\"indexMethod\">\r\n                  </el-table-column>\r\n                  <el-table-column label=\"Photo\"\r\n                                   width=\"100\">\r\n                      <template slot-scope=\"scope\">\r\n                          <img :src=\"getImageFile(scope.row.person.photo)\" height=\"40\">\r\n                      </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"Name\"\r\n                                   width=\"200\">\r\n\r\n                      <template slot-scope=\"scope\">\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"scope.row.person.middleName\">\r\n                              {{ scope.row.person.firstName+' '+scope.row.person.middleName+' '+scope.row.person.lastName }}\r\n                          </div>\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"!scope.row.person.middleName\">\r\n                              {{ scope.row.person.firstName+' '+scope.row.person.lastName }}\r\n                          </div>\r\n\r\n                      </template>\r\n                  </el-table-column>\r\n                  <el-table-column sortable\r\n                                   label=\"Gender\"\r\n                                   width=\"100\">\r\n                      <template slot-scope=\"scope\">\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"scope.row.person.gender\">\r\n                              <el-tag size=\"medium\">{{ scope.row.person.gender.name }}</el-tag>\r\n                          </div>\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"!scope.row.person.gender\">\r\n                              <el-tag size=\"medium\">Gender is missing</el-tag>\r\n                          </div>\r\n                      </template>\r\n                  </el-table-column>\r\n                  <el-table-column sortable\r\n                                   label=\"Department\"\r\n                                   width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"scope.row.employeeJob.department\">\r\n                              {{ scope.row.employeeJob.department.name }}\r\n                          </div>\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"!scope.row.employeeJob.department\">\r\n                              Not assign yet\r\n                          </div>\r\n                      </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"Post\"\r\n                                   width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"scope.row.employeeJob.post\">\r\n                              {{ scope.row.employeeJob.post.name }}\r\n                          </div>\r\n                          <div slot=\"reference\" class=\"name-wrapper\" v-if=\"!scope.row.employeeJob.post\">\r\n                              Not assign yet\r\n                          </div>\r\n                      </template>\r\n                  </el-table-column>\r\n\r\n                  <el-table-column align=\"right\">\r\n\r\n                      <template slot-scope=\"scope\">\r\n\r\n                          <el-button size=\"mini\"\r\n                                     @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button>\r\n                          <el-button size=\"mini\"\r\n                                     type=\"danger\"\r\n                                     @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\r\n                      </template>\r\n                  </el-table-column>\r\n              </el-table>\r\n              <div class=\"block\" style=\"text-align: center;\">\r\n                  <span class=\"demonstration\"></span>\r\n                  <el-pagination v-on:size-change=\"handleSizeChange\"\r\n                                 v-on:current-change=\"handleCurrentChange\"\r\n                                 :current-page.sync=\"employees.currentPage\"\r\n                                 :page-sizes=\"[5,10, 20, 50, 100]\"\r\n                                 :page-size=\"employees.pageSize\"\r\n                                 layout=\"total, sizes, prev, pager, next, jumper\"\r\n                                 :total=\"employees.rowCount\">\r\n                  </el-pagination>\r\n              </div>\r\n          </template>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import { getEmployeeList } from '@/api/table';\r\n    import { deleteEmployee } from '@/api/employee';\r\n    \r\n    export default {\r\n        data() {\r\n            return {\r\n                employees: [],  \r\n                loading: false,\r\n                search: '',\r\n                index:''\r\n            }\r\n        },\r\n        methods: {\r\n            handleSizeChange(val) {\r\n                this.getEmployees(1, val);\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.getEmployees(val, 5);\r\n            },\r\n            getImageFile: function (ImageURL) {\r\n                return ImageURL;\r\n            },\r\n            \r\n            \r\n            getEmployees: function (page, pageSize) {\r\n                this.loading = true;\r\n                //NProgress.start();\r\n                var params = { page: page, pageSize: pageSize }\r\n                return new Promise((resolve, reject) => {\r\n                    getEmployeeList(params).then((res) => {\r\n                        this.employees = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })              \r\n            },\r\n           \r\n            indexMethod(index) {\r\n                return index +1;\r\n            },\r\n            handleEdit(index, row) {\r\n                this.$router.push({ path: 'employee-edit', name: 'employee-edit', params: { row: row }, meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\r\n            },\r\n            handleDelete(index, row) {\r\n                this.$confirm('This will permanently delete the Role. Continue?', 'Warning', {\r\n                    confirmButtonText: 'OK',\r\n                    cancelButtonText: 'Cancel',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.loading = true;\r\n                    //NProgress.start();\r\n\r\n                    var employeeParams = { Id: row.id, PersonId: row.personId, Person: row.person, };\r\n                    return new Promise((resolve, reject) => {\r\n                        deleteEmployee(employeeParams).then((res) => {\r\n                            this.loading = false;\r\n                            //NProgress.done();\r\n                            this.getEmployees();\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: 'Delete completed'\r\n                            });\r\n                            resolve()\r\n                        }).catch(error => {\r\n                            this.$message({\r\n                                type: 'info',\r\n                                message: 'Delete canceled ' + error\r\n                            });\r\n                            this.loading = false;\r\n                            reject(error)\r\n                        })\r\n                    })\r\n                })\r\n            },\r\n         \r\n            handleAdd() {\r\n                this.$router.push({ path: 'employee-add', name: 'employee-add', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getEmployees();\r\n        }\r\n    };\r\n</script>\r\n<style scoped>\r\n    \r\n</style>"],"sourceRoot":"src\\views\\employee"}]}
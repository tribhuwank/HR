{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\user\\index.vue","mtime":1548775726888},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport _Promise from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getUserList, getRoleList } from '@/api/table';\nimport { deleteUser } from '@/api/user';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please input the password'));\n      } else {\n        if (_this.ruleForm.checkPass !== '') {\n          _this.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please input the password again'));\n      } else if (value !== _this.ruleForm.password) {\n        callback(new Error('Two inputs don\\'t match!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      userstableData: [],\n      roles: [],\n      loading: false,\n      search: '',\n      ruleForm: {\n        name: '',\n        userName: '',\n        password: '',\n        checkPass: '',\n        roleId: '',\n        id: ''\n      }\n    };\n  },\n  methods: (_methods = {\n    handleSizeChange: function handleSizeChange(val) {\n      this.getUsers(1, val);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.getUsers(val, null);\n    },\n    indexMethod: function indexMethod(index) {\n      return index + 1;\n    },\n    getUsers: function getUsers(page, pageSize) {\n      var _this2 = this;\n\n      this.loading = true;\n      var params = {\n        page: page,\n        pageSize: pageSize\n      };\n      return new _Promise(function (resolve, reject) {\n        getUserList(params).then(function (res) {\n          _this2.userstableData = res.result;\n          _this2.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getRoles: function getRoles() {\n      var _this3 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getRoleList().then(function (res) {\n          _this3.roles = res.result;\n          _this3.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  }, _defineProperty(_methods, \"indexMethod\", function indexMethod(index) {\n    return index + 1;\n  }), _defineProperty(_methods, \"handleEdit\", function handleEdit(index, row) {\n    this.$router.push({\n      path: 'user-edit',\n      name: 'user-edit',\n      params: {\n        row: row\n      }\n    });\n  }), _defineProperty(_methods, \"handleDelete\", function handleDelete(index, row) {\n    var _this4 = this;\n\n    this.$confirm('This will permanently delete the User. Continue?', 'Warning', {\n      confirmButtonText: 'OK',\n      cancelButtonText: 'Cancel',\n      type: 'warning'\n    }).then(function () {\n      _this4.loading = true;\n      var userParams = {\n        Id: row.id,\n        Name: row.name,\n        UserName: row.username,\n        Password: row.password,\n        RoleId: row.roleId\n      };\n      deleteUser(userParams).then(function (res) {\n        _this4.loading = false;\n\n        _this4.getUsers();\n\n        _this4.$message({\n          type: 'success',\n          message: 'Delete completed'\n        });\n      }).catch(function (error) {\n        _this4.$message({\n          type: 'info',\n          message: 'Delete canceled ' + error\n        });\n      });\n    }).catch(function (error) {\n      _this4.$message({\n        type: 'info',\n        message: 'Delete canceled ' + error\n      });\n    });\n  }), _defineProperty(_methods, \"handleAdd\", function handleAdd() {\n    this.$router.push({\n      path: 'user-add',\n      name: 'user-add',\n      meta: {\n        requiresAuth: true,\n        adminAuth: true,\n        operatorAuth: false\n      }\n    });\n  }), _defineProperty(_methods, \"handleRoles\", function handleRoles() {\n    this.$router.push({\n      path: 'role'\n    });\n  }), _methods),\n  created: function created() {},\n  mounted: function mounted() {\n    this.getUsers(1, 5);\n    this.getRoles();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n        <el-button round @click=\"handleRoles()\" style=\"margin:20px;float:right\">ROLES</el-button>\r\n        <el-button round @click=\"handleAdd()\" style=\"margin:20px;float:right\">ADD USER</el-button>\r\n\r\n        <template>\r\n            <el-table :data=\"userstableData.results\" v-loading=\"loading\"\r\n                      style=\"width: 100%\">\r\n                <el-table-column type=\"index\"\r\n                                 :index=\"indexMethod\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"name\" sortable\r\n                                 label=\"Name\"\r\n                                 width=\"200\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"username\" sortable\r\n                                 label=\"Username\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"role.name\" sortable\r\n                                 label=\"Role\">\r\n\r\n                </el-table-column>\r\n                <el-table-column align=\"right\">\r\n\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button size=\"mini\"\r\n                                   @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button>\r\n                        <el-button size=\"mini\"\r\n                                   type=\"danger\"\r\n                                   @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <div class=\"block\" style=\"text-align: center;\">\r\n                <span class=\"demonstration\"></span>\r\n                <el-pagination v-on:size-change=\"handleSizeChange\"\r\n                               v-on:current-change=\"handleCurrentChange\"\r\n                               :current-page.sync=\"userstableData.currentPage\"\r\n                               :page-sizes=\"[5,10, 20, 50, 100]\"\r\n                               :page-size=\"userstableData.pageSize\"\r\n                               layout=\"total, sizes, prev, pager, next, jumper\"\r\n                               :total=\"userstableData.rowCount\">\r\n                </el-pagination>\r\n            </div>\r\n\r\n        </template>\r\n     </div>\r\n</template>\r\n<script>\r\n    import { getUserList, getRoleList } from '@/api/table';\r\n    import { deleteUser } from '@/api/user';\r\n      \r\n    export default {\r\n        data() {\r\n            var validatePass = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('Please input the password'));\r\n                } else {\r\n                    if (this.ruleForm.checkPass !== '') {\r\n                        this.$refs.ruleForm.validateField('checkPass');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            var validatePass2 = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('Please input the password again'));\r\n                } else if (value !== this.ruleForm.password) {\r\n                    callback(new Error('Two inputs don\\'t match!'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n           \r\n            return {\r\n                userstableData: [], \r\n                roles:[],\r\n                loading: false,\r\n                search: '',\r\n                ruleForm: {\r\n                    name: '',\r\n                    userName: '',\r\n                    password: '',\r\n                    checkPass: '',\r\n                    roleId: '',\r\n                    id: ''\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            handleSizeChange(val) {\r\n                this.getUsers(1, val);\r\n\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.getUsers(val, null);\r\n            },\r\n            indexMethod(index) {\r\n                return index + 1;\r\n            },\r\n            getUsers: function (page,pageSize) {\r\n                this.loading = true;\r\n                var params = { page: page, pageSize: pageSize }\r\n                return new Promise((resolve, reject) => {\r\n                getUserList(params).then((res) => {\r\n                    this.userstableData = res.result;\r\n                    this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getRoles: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getRoleList().then((res) => {\r\n                        this.roles = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n          \r\n            indexMethod(index) {\r\n                return index +1;\r\n            },\r\n            handleEdit(index, row) {\r\n               \r\n                this.$router.push({ path: 'user-edit', name: 'user-edit', params: { row: row } });             \r\n            },\r\n            handleDelete(index, row) {\r\n                this.$confirm('This will permanently delete the User. Continue?', 'Warning', {\r\n                    confirmButtonText: 'OK',\r\n                    cancelButtonText: 'Cancel',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.loading = true;\r\n                    var userParams = { Id: row.id, Name: row.name, UserName: row.username, Password: row.password, RoleId: row.roleId };\r\n                    \r\n                    deleteUser(userParams).then((res) => {\r\n                        this.loading = false;\r\n                        this.getUsers();\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: 'Delete completed'\r\n                        });\r\n                    }).catch((error) => {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: 'Delete canceled ' + error \r\n                        });\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: 'Delete canceled ' + error \r\n                    });\r\n                });\r\n            },\r\n            handleAdd() { \r\n                this.$router.push({ path: 'user-add', name: 'user-add', meta: { requiresAuth: true, adminAuth: true, operatorAuth: false } });             \r\n            },\r\n            handleRoles() {\r\n                this.$router.push({ path: 'role' });\r\n            },\r\n           \r\n        },\r\n        created() {            \r\n        },\r\n        mounted() {\r\n            this.getUsers(1,5);\r\n            this.getRoles();\r\n        }\r\n    };\r\n</script>\r\n<style scoped>\r\n    \r\n</style>"],"sourceRoot":"src\\views\\admin\\user"}]}
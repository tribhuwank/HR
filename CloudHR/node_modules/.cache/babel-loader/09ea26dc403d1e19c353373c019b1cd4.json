{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\employee\\DependentDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\employee\\DependentDetail.vue","mtime":1557856646883},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getCastList, getGenderList, getMaritalStatusList, getReligionsList, getLitracyList, getHealthStatusList, getCountryList, getProvinceList, getDistrictList, getMunVdcList, getWardList } from '@/api/table';\nimport { addEmployee, deleteEmployee } from '@/api/employee';\nimport { getUserByPerson } from '@/api/user';\nimport { Script } from 'vm';\nexport default {\n  props: ['ruleForm.employee.dependentPersons'],\n  data: function data() {\n    return {\n      index: '',\n      ruleForm: {\n        person: {\n          id: null,\n          firstName: '',\n          middleName: '',\n          lastName: '',\n          dob: null,\n          genderId: null,\n          religionId: null,\n          castId: null,\n          email: '',\n          phone1: '',\n          phone2: '',\n          permanentAddressId: '',\n          permanentAddress: {\n            id: null,\n            addressTypeId: 1,\n            countryId: null,\n            provinceId: null,\n            districtId: null,\n            munVdcId: null,\n            addressLine1: '',\n            addressLine2: '',\n            wardNo: null,\n            pinCode: null,\n            houseNo: null\n          },\n          temporaryAddressId: '',\n          temporaryAddress: {\n            id: null,\n            addressTypeId: 2,\n            countryId: null,\n            provinceId: null,\n            districtId: null,\n            munVdcId: null,\n            addressLine1: '',\n            addressLine2: '',\n            wardNo: null,\n            pinCode: null,\n            houseNo: null\n          },\n          maritalStatusId: null,\n          healthStatusId: null,\n          identityTypeId: null,\n          identityNumber: null,\n          identityIssueDate: null,\n          identityIssuePlace: null,\n          litracyId: null,\n          educationId: null,\n          eduInstitutionTypeId: null\n        },\n        religions: [],\n        casts: [],\n        addressTypes: [],\n        countrys1: [],\n        countrys2: [],\n        provinces1: [],\n        provinces2: [],\n        districts1: [],\n        districts2: [],\n        munVdcs1: [],\n        munVdcs2: [],\n        wards1: [],\n        wards2: [],\n        maritalStatuses: [],\n        identityTypes: [],\n        litracys: [],\n        educations: [],\n        eduInstitutionTypes: []\n      }\n    };\n  },\n  //created() {\n  //},\n  mounted: function mounted() {\n    this.getGenders();\n    this.getMaritalStatus();\n    this.getReligions();\n    this.getCasts();\n    this.getLitracys();\n    this.getHealthStatuses();\n    this.getCountrys1();\n    this.getCountrys2();\n    this.getProvinces1();\n    this.getProvinces2();\n  },\n  methods: {\n    getCountrys1: function getCountrys1() {\n      var _this = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this.loading = true;\n        getCountryList().then(function (res) {\n          _this.countrys1 = res.result;\n          _this.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getCountrys2: function getCountrys2() {\n      var _this2 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getCountryList().then(function (res) {\n          _this2.countrys2 = res.result;\n          _this2.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getProvinces1: function getProvinces1() {\n      var _this3 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getProvinceList().then(function (res) {\n          _this3.provinces1 = res.result;\n          _this3.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getProvinces2: function getProvinces2() {\n      var _this4 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getProvinceList().then(function (res) {\n          _this4.provinces2 = res.result;\n          _this4.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getDistricts1: function getDistricts1(provinceId) {\n      var _this5 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        var params = {\n          provinceId: provinceId\n        };\n        getDistrictList(params).then(function (res) {\n          _this5.districts1 = res.result;\n          _this5.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getDistricts2: function getDistricts2(provinceId) {\n      var _this6 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        var params = {\n          provinceId: provinceId\n        };\n        getDistrictList(params).then(function (res) {\n          _this6.districts2 = res.result;\n          _this6.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getMunVdcs1: function getMunVdcs1(districtId) {\n      var _this7 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        var params = {\n          districtId: districtId\n        };\n        getMunVdcList(params).then(function (res) {\n          _this7.munVdcs1 = res.result;\n          _this7.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getMunVdcs2: function getMunVdcs2(districtId) {\n      var _this8 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        var params = {\n          districtId: districtId\n        };\n        getMunVdcList(params).then(function (res) {\n          _this8.munVdcs2 = res.result;\n          _this8.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getWards1: function getWards1(munVdcId) {\n      var _this9 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        var params = {\n          munVdcId: munVdcId\n        };\n        getWardList(params).then(function (res) {\n          _this9.wards1 = res.result;\n          _this9.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getWards2: function getWards2(munVdcId) {\n      var _this10 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        var params = {\n          munVdcId: munVdcId\n        };\n        getWardList(params).then(function (res) {\n          _this10.wards2 = res.result;\n          _this10.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getLitracys: function getLitracys() {\n      var _this11 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getLitracyList().then(function (res) {\n          _this11.litracys = res.result;\n          _this11.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getHealthStatuses: function getHealthStatuses() {\n      var _this12 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getHealthStatusList().then(function (res) {\n          _this12.healthStatuses = res.result;\n          _this12.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getGenders: function getGenders() {\n      var _this13 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getGenderList().then(function (res) {\n          _this13.genders = res.result;\n          _this13.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getCasts: function getCasts() {\n      var _this14 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getCastList().then(function (res) {\n          _this14.casts = res.result;\n          _this14.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getMaritalStatus: function getMaritalStatus() {\n      var _this15 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getMaritalStatusList().then(function (res) {\n          _this15.maritalStatuses = res.result;\n          _this15.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getReligions: function getReligions() {\n      var _this16 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getReligionsList().then(function (res) {\n          _this16.religions = res.result;\n          _this16.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    submitForm: function submitForm(formName) {\n      var _this17 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this17.loading = true;\n          return new _Promise(function (resolve, reject) {\n            var employeeParams = {\n              Id: _this17.ruleForm.id,\n              Name: _this17.ruleForm.name,\n              UserName: _this17.ruleForm.username,\n              Password: _this17.ruleForm.password,\n              RoleId: _this17.ruleForm.roleId\n            };\n            editEmployee(employeeParams).then(function (res) {\n              _this17.$router.back();\n\n              _this17.loading = false;\n              resolve();\n\n              _this17.$message({\n                type: 'success',\n                message: 'Employee Edit completed'\n              });\n            }).catch(function (error) {\n              reject(error);\n            });\n          });\n        } else {\n          _this17.$message({\n            type: 'info',\n            message: 'Employee Edit Canceled'\n          });\n\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$router.back(); //this.$refs[formName].resetFields();\n    },\n    handleBack: function handleBack() {\n      this.$router.back();\n    }\n  }\n};",{"version":3,"sources":["DependentDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <section style=\"margin:20px;\">\r\n        <el-button round @click=\"handleAddDependent()\" style=\"margin:20px;float:right\">ADD DEPENDENT</el-button>\r\n        <template>\r\n\r\n        </template>\r\n        <template>\r\n            <el-table :data=\"ruleForm.employee.dependentPersons\"\r\n                      style=\"width: 100%\">\r\n                <el-table-column type=\"index\"\r\n                                 :index=\"indexMethod\">\r\n                </el-table-column>\r\n                <el-table-column label=\"Photo\"\r\n                                 width=\"100\">\r\n                    <template slot-scope=\"scope\">\r\n                        <img :src=\"getImageFile(scope.row.person.photo)\" height=\"40\">\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"Name\"\r\n                                 width=\"200\">\r\n\r\n                    <template slot-scope=\"scope\">\r\n                        <div slot=\"reference\" class=\"name-wrapper\" v-if=\"scope.row.person.middleName\">\r\n                            {{ scope.row.person.firstName+' '+scope.row.person.middleName+' '+scope.row.person.lastName }}\r\n                        </div>\r\n                        <div slot=\"reference\" class=\"name-wrapper\" v-if=\"!scope.row.person.middleName\">\r\n                            {{ scope.row.person.firstName+' '+scope.row.person.lastName }}\r\n                        </div>\r\n\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column sortable\r\n                                 label=\"Gender\"\r\n                                 width=\"100\">\r\n                    <template slot-scope=\"scope\">\r\n                        <div slot=\"reference\" class=\"name-wrapper\" v-if=\"scope.row.person.gender\">\r\n                            <el-tag size=\"medium\">{{ scope.row.person.gender.name }}</el-tag>\r\n                        </div>\r\n                        <div slot=\"reference\" class=\"name-wrapper\" v-if=\"!scope.row.person.gender\">\r\n                            <el-tag size=\"medium\">Gender is missing</el-tag>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column sortable\r\n                                 label=\"Relation\"\r\n                                 width=\"180\">\r\n                    <template slot-scope=\"scope\">\r\n                        {{ scope.row.relation.name }}\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"Contact\"\r\n                                 width=\"100\">\r\n                    <template slot-scope=\"scope\">\r\n                        {{ scope.row.phone1 }}\r\n                    </template>\r\n                </el-table-column>\r\n\r\n                <el-table-column align=\"right\">\r\n\r\n                    <template slot-scope=\"scope\">\r\n\r\n                        <el-button size=\"mini\"\r\n                                   @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button>\r\n                        <el-button size=\"mini\"\r\n                                   type=\"danger\"\r\n                                   @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <div class=\"block\" style=\"text-align: center;\">\r\n                <span class=\"demonstration\"></span>\r\n                <el-pagination v-on:size-change=\"handleSizeChange\"\r\n                               v-on:current-change=\"handleCurrentChange\"\r\n                               :current-page.sync=\"ruleForm.dependentPersons.currentPage\"\r\n                               :page-sizes=\"[5,10, 20, 50, 100]\"\r\n                               :page-size=\"ruleForm.employee.dependentPersons.pageSize\"\r\n                               layout=\"total, sizes, prev, pager, next, jumper\"\r\n                               :total=\"ruleForm.employee.dependentPersons.rowCount\">\r\n                </el-pagination>\r\n            </div>\r\n        </template>\r\n    </section>\r\n</template>\r\n<script>\r\n     import { getCastList, getGenderList, getMaritalStatusList,getReligionsList,getLitracyList,\r\n    getHealthStatusList, getCountryList, getProvinceList, getDistrictList, getMunVdcList, getWardList } from '@/api/table';\r\n    import { addEmployee, deleteEmployee } from '@/api/employee';\r\n    import { getUserByPerson } from '@/api/user';\r\nimport { Script } from 'vm';\r\n    export default {\r\n        props:['ruleForm.employee.dependentPersons'],\r\n        data() {\r\n\r\n            return {\r\n                index: '',\r\n                ruleForm: {                    \r\n                    person: {\r\n                        id: null,\r\n                        firstName: '',\r\n                        middleName: '',\r\n                        lastName: '',\r\n                        dob: null,\r\n                        genderId: null,\r\n                        religionId: null,\r\n                        castId: null,\r\n                        email: '',\r\n                        phone1: '',\r\n                        phone2: '',\r\n                        permanentAddressId: '',\r\n                        permanentAddress: {\r\n                            id: null,\r\n                            addressTypeId: 1,\r\n                            countryId: null,\r\n                            provinceId: null,\r\n                            districtId: null,\r\n                            munVdcId: null,\r\n                            addressLine1: '',\r\n                            addressLine2: '',\r\n                            wardNo: null,\r\n                            pinCode: null,\r\n                            houseNo: null\r\n                        },\r\n                        temporaryAddressId: '',\r\n                        temporaryAddress: {\r\n                            id: null,\r\n                            addressTypeId: 2,\r\n                            countryId: null,\r\n                            provinceId: null,\r\n                            districtId: null,\r\n                            munVdcId: null,\r\n                            addressLine1: '',\r\n                            addressLine2: '',\r\n                            wardNo: null,\r\n                            pinCode: null,\r\n                            houseNo: null\r\n                        },\r\n                        maritalStatusId: null,\r\n                        healthStatusId: null,\r\n                        identityTypeId: null,\r\n                        identityNumber: null,\r\n                        identityIssueDate: null,\r\n                        identityIssuePlace: null,\r\n                        litracyId: null,\r\n                        educationId: null,\r\n                        eduInstitutionTypeId: null\r\n\r\n                    },\r\n                    religions: [],\r\n                    casts: [],\r\n                    addressTypes: [],\r\n                    countrys1: [],\r\n                    countrys2: [],\r\n                    provinces1: [],\r\n                    provinces2: [],\r\n                    districts1: [],\r\n                    districts2: [],\r\n                    munVdcs1: [],\r\n                    munVdcs2: [],\r\n                    wards1: [],\r\n                    wards2: [],\r\n                    maritalStatuses: [],\r\n                    identityTypes: [],\r\n                    litracys: [],\r\n                    educations: [],\r\n                    eduInstitutionTypes: [],\r\n\r\n                }\r\n            }\r\n        },\r\n            //created() {\r\n\r\n            //},\r\n            mounted() {\r\n                this.getGenders();\r\n                this.getMaritalStatus();\r\n                this.getReligions();\r\n                this.getCasts();\r\n                this.getLitracys();\r\n                this.getHealthStatuses();\r\n                this.getCountrys1();\r\n                this.getCountrys2();\r\n                this.getProvinces1();\r\n                this.getProvinces2();\r\n\r\n            },\r\n        methods: {\r\n            getCountrys1: function () {\r\n                return new Promise((resolve, reject) => {\r\n                    this.loading = true;\r\n                    getCountryList().then((res) => {\r\n                        this.countrys1 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getCountrys2: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getCountryList().then((res) => {\r\n                        this.countrys2 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getProvinces1: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getProvinceList().then((res) => {\r\n                        this.provinces1 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getProvinces2: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getProvinceList().then((res) => {\r\n                        this.provinces2 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getDistricts1: function (provinceId) {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    var params = { provinceId: provinceId }\r\n                    getDistrictList(params).then((res) => {\r\n                        this.districts1 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getDistricts2: function (provinceId) {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    var params = { provinceId: provinceId }\r\n                    getDistrictList(params).then((res) => {\r\n                        this.districts2 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n\r\n\r\n            getMunVdcs1: function (districtId) {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    var params = { districtId: districtId }\r\n                    getMunVdcList(params).then((res) => {\r\n                        this.munVdcs1 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getMunVdcs2: function (districtId) {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    var params = { districtId: districtId }\r\n                    getMunVdcList(params).then((res) => {\r\n                        this.munVdcs2 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getWards1: function (munVdcId) {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    var params = { munVdcId: munVdcId }\r\n                    getWardList(params).then((res) => {\r\n                        this.wards1 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getWards2: function (munVdcId) {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    var params = { munVdcId: munVdcId }\r\n                    getWardList(params).then((res) => {\r\n                        this.wards2 = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getLitracys: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getLitracyList().then((res) => {\r\n                        this.litracys = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getHealthStatuses: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getHealthStatusList().then((res) => {\r\n                        this.healthStatuses = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getGenders: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getGenderList().then((res) => {\r\n                        this.genders = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getCasts: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getCastList().then((res) => {\r\n                        this.casts = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getMaritalStatus: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getMaritalStatusList().then((res) => {\r\n                        this.maritalStatuses = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            getReligions: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getReligionsList().then((res) => {\r\n                        this.religions = res.result;\r\n                        this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })\r\n            },\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        this.loading = true;\r\n                        return new Promise((resolve, reject) => {\r\n                            var employeeParams = { Id: this.ruleForm.id, Name: this.ruleForm.name, UserName: this.ruleForm.username, Password: this.ruleForm.password, RoleId: this.ruleForm.roleId };\r\n                            editEmployee(employeeParams).then((res) => {\r\n                                this.$router.back();\r\n                                this.loading = false;\r\n                                resolve()\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: 'Employee Edit completed'\r\n                                })\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                        })\r\n                    } else {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: 'Employee Edit Canceled'\r\n                        });\r\n                        return false;\r\n                    }\r\n                })\r\n            },\r\n            resetForm(formName) {\r\n                this.$router.back();\r\n                //this.$refs[formName].resetFields();\r\n            },\r\n            handleBack() {\r\n                this.$router.back();\r\n            }\r\n        }\r\n        \r\n    }\r\n</script>\r\n"],"sourceRoot":"src\\views\\employee"}]}
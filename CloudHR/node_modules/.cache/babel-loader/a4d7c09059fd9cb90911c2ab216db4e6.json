{"remainingRequest":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\user\\createUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\src\\views\\admin\\user\\createUser.vue","mtime":1551346714183},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Applicatons\\CloudHR\\CloudHR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"E:\\\\Applicatons\\\\CloudHR\\\\CloudHR\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getRoleList } from '@/api/table';\nimport { addUser } from '@/api/user';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please input the password'));\n      } else {\n        if (_this.ruleForm.checkPass !== '') {\n          _this.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please input the password again'));\n      } else if (value !== _this.ruleForm.password) {\n        callback(new Error('Two inputs don\\'t match!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        id: '',\n        name: '',\n        username: '',\n        password: '',\n        checkPass: '',\n        roleId: null\n      },\n      roles: [],\n      rules: {\n        roleId: [{\n          required: true,\n          message: 'Please select at least one Role',\n          pattern: /.+/,\n          trigger: 'change'\n        }],\n        name: [{\n          required: true,\n          message: 'Please input Role Name',\n          trigger: 'blur'\n        }],\n        username: [{\n          required: true,\n          message: 'Please input User Name',\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getRoles();\n  },\n  methods: {\n    getRoles: function getRoles() {\n      var _this2 = this;\n\n      this.loading = true;\n      return new _Promise(function (resolve, reject) {\n        getRoleList().then(function (res) {\n          console.log('roles', res.result);\n          _this2.roles = res.result;\n          _this2.loading = false;\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n          return new _Promise(function (resolve, reject) {\n            var userParams = {\n              Id: _this3.ruleForm.id,\n              Name: _this3.ruleForm.name,\n              UserName: _this3.ruleForm.username,\n              Password: _this3.ruleForm.password,\n              RoleId: _this3.ruleForm.roleId\n            };\n            addUser(userParams).then(function (res) {\n              _this3.$router.back();\n\n              _this3.loading = false;\n\n              _this3.$message({\n                type: 'success',\n                message: 'User Add completed'\n              });\n\n              resolve();\n            }).catch(function (error) {\n              reject(error);\n            });\n          });\n        } else {\n          _this3.$message({\n            type: 'info',\n            message: 'User Add Canceled'\n          });\n\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    handleBack: function handleBack() {\n      this.$router.back();\n    }\n  }\n};",{"version":3,"sources":["createUser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n        <el-row>\r\n            <el-button round @click=\"handleBack()\" style=\"margin:20px;float:right\">BACK TO USERS</el-button>\r\n        </el-row>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\">\r\n            <el-form-item label=\"Name\" prop=\"name\">\r\n                <el-input v-model=\"ruleForm.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"User Name\" prop=\"username\" placeholder=\"User Name\">\r\n                <el-input v-model=\"ruleForm.username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Role\" prop=\"roleId\">\r\n                <el-select v-model=\"ruleForm.roleId\" placeholder=\"Role\">\r\n                    <el-option v-for=\"item in roles\"\r\n                               :key=\"item.id\"\r\n                               :label=\"item.name\"\r\n                               :value=\"item.id\">\r\n                    </el-option>\r\n\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"Password\" prop=\"password\" placeholder=\"Password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Confirm\" prop=\"checkPass\" placeholder=\"Confirm Password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Create</el-button>\r\n                <el-button @click=\"resetForm('ruleForm')\">Reset</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n<script>\r\n    import { getRoleList } from '@/api/table';\r\n    import { addUser } from '@/api/user';\r\n    export default {\r\n        data() {\r\n            var validatePass = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('Please input the password'));\r\n                } else {\r\n                    if (this.ruleForm.checkPass !== '') {\r\n                        this.$refs.ruleForm.validateField('checkPass');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            var validatePass2 = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('Please input the password again'));\r\n                } else if (value !== this.ruleForm.password) {\r\n                    callback(new Error('Two inputs don\\'t match!'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            return {\r\n                ruleForm: {\r\n                    id: '',\r\n                    name: '',\r\n                    username: '',\r\n                    password: '',\r\n                    checkPass: '',\r\n                    roleId: null\r\n                    \r\n                },\r\n                roles: [],\r\n                rules: {\r\n                    roleId: [\r\n                        { required: true, message: 'Please select at least one Role', pattern: /.+/, trigger: 'change' }                     \r\n                    ],\r\n                    name: [\r\n                        { required: true, message: 'Please input Role Name', trigger: 'blur' }\r\n                    ],\r\n                    username: [\r\n                        { required: true, message: 'Please input User Name', trigger: 'blur' }\r\n                    ],\r\n                    password: [\r\n                        { validator: validatePass, trigger: 'blur' }\r\n                    ],\r\n                    checkPass: [\r\n                        { validator: validatePass2, trigger: 'blur' }\r\n                    ]\r\n                }\r\n            };\r\n        },\r\n        mounted() {\r\n            this.getRoles();\r\n        },\r\n        methods: {\r\n            getRoles: function () {\r\n                this.loading = true;\r\n                return new Promise((resolve, reject) => {\r\n                    getRoleList().then((res) => {\r\n                        console.log('roles', res.result);\r\n                    this.roles = res.result;\r\n                    this.loading = false;\r\n                        resolve()\r\n                    }).catch(error => {\r\n                        reject(error)\r\n                    })\r\n                })   \r\n            },\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n\r\n                        this.loading = true;\r\n                        return new Promise((resolve, reject) => {\r\n                        var userParams = { Id: this.ruleForm.id, Name: this.ruleForm.name, UserName: this.ruleForm.username, Password: this.ruleForm.password, RoleId: this.ruleForm.roleId };\r\n                        addUser(userParams).then((res) => {\r\n                            this.$router.back();\r\n                            this.loading = false;\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: 'User Add completed'\r\n                            });\r\n                                resolve();\r\n                            }).catch(error => {\r\n                                reject(error)\r\n                            })\r\n                        })                   \r\n                    } else {\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: 'User Add Canceled'\r\n                        });\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            },\r\n            handleBack() {\r\n                this.$router.back();\r\n            }\r\n        }\r\n\r\n    }\r\n</script>"],"sourceRoot":"src\\views\\admin\\user"}]}